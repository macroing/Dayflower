2024-05-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix bugs in the Trowbridge Reitz microfacet distribution implementations.

2024-04-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Color, Curve, Filter and Noise APIs from the library Art4J.
	* REMOVE:	Remove the dependency to the library Art4J.

2024-04-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the JavaFX Concurrent, JavaFX Scene Control, JavaFX Scene Image and JavaFX Scene Layout APIs from the library Macroing JavaFX.
	* REMOVE:	Remove the dependency to the library Macroing JavaFX.

2024-04-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the triangle intersection and computation algorithms in the GPU-renderer.

2023-12-30  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the copyright notice.

2023-11-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add an error float implementation to the sphere in the GPU-renderer.

2023-08-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the EDouble and EFloat classes.
	* CHANGE:	Refactor the Sphere3F and Sphere3FReader classes.

2023-08-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the Scene BSSRDF API.
	* CHANGE:	Refactor the Renderer GPU API.

2023-08-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getMaxComponentValue(), getMaxDimension() and permute(Vector3D, int, int, int) to the Vector3D class.
	* ADD:		Add the methods getMaxComponentValue(), getMaxDimension() and permute(Vector3F, int, int, int) to the Vector3F class.
	* ADD:		Add the method permute(Point3D, int, int, int) to the Point3D class.
	* ADD:		Add the method permute(Point3F, int, int, int) to the Point3F class.
	* CHANGE:	Update the method intersectionT(Ray3F, float, float) in the Triangle3F class.
	* CHANGE:	Update the SeparableBSSRDF class.

2023-07-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the SubsurfaceMaterial class to the Scene Material API.

2023-07-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the FourierBXDF and FourierBXDFTable classes to the Scene BXDF API.
	* ADD:		Add the FourierMaterial class to the Scene Material API.

2023-07-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Interpolation API.
	* ADD:		Add the method findInterval(int, IntPredicate) to the Ints class.
	* CHANGE:	Refactor the Scene BSSRDF API.

2023-07-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix a bug in the Scene BSSRDF API.

2023-07-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the Scene BSSRDF API.

2023-06-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the Scene BSSRDF API.
	* CHANGE:	Fix a bug in BSDF.

2023-06-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the KDSubsurfaceMaterial class.
	* CHANGE:	Refactor the Scene BSSRDF API.
	* CHANGE:	Update the Scene class to support BSSRDF.

2023-06-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the Scene BSSRDF API.

2023-06-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the Scene BSSRDF API.

2023-06-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the Scene Material API.

2023-06-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for tone map operators to the GPU-renderer. They can be changed in the GUI.

2023-06-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix PerezLight in the CPU- and GPU renderers.

2023-06-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method loadHDR(File) to the PixelImageF class.
	* ADD:		Add the method toIntArrayRGBE() to the ImageF class.
	* ADD:		Add support for HDR lights using ImageLight.

2023-06-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for TranslucentMaterial in the GUI.
	* CHANGE:	Replace the Node API with the Visitor API in Macroing Java.

2023-06-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for TranslucentMaterial to the GPU-renderer.

2023-05-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix a bug in the Scene class related to the Ray Tracing algorithm. It should not allow multiple lobes when computing BSDF instances.

2023-05-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix a bug in AbstractShape3FKernel.

2023-03-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for FresnelSpecularBXDF to the GlassMaterial implementation in the GPU-renderer.

2023-02-12  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add TranslucentMaterial.
	* CHANGE:	Fix a bug in Sphere3D and Sphere3F.

2023-01-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for Hyperboloid3F, Rectangle3F, RectangularCuboid3F and Triangle3F in the GUI.
	* ADD:		Add a car scene. The model and textures were created by Martin Sandgren (https://github.com/carlmartus).

2023-01-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the JavaFX Shape API. It is now being used by the GUI when adding primitives.

2022-12-31  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for UberMaterial in the GUI.
	* ADD:		Add support for UberMaterial in the Scene Compiler API.
	* ADD:		Add support for UberMaterial in the GPU-renderer.

2022-12-30  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a dependency to Macroing JavaFX.
	* ADD:		Add support for DisneyMaterial in the GUI.
	* REMOVE:	Remove the JavaFX Concurrent, JavaFX Scene Control, JavaFX Scene Image and JavaFX Scene Layout APIs. They are now located in the library Macroing JavaFX.

2022-12-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for PolkaDotMaterial in the GUI.
	* ADD:		Add preview images to MaterialPicker and TexturePicker.
	* CHANGE:	Update MetalMaterialGridPane.

2022-12-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add group name, object name and material name for triangle meshes in the scene property view of the GUI.
	* ADD:		Add the JavaFX Material API.
	* ADD:		Add support for BlendTexture in the GUI.
	* ADD:		Add a TexturePicker class to the JavaFX Texture API.
	* CHANGE:	Update the BullseyeTextureGridPane, CheckerboardTextureGridPane and PolkaDotTextureGridPane classes to use the TexturePicker instead of ColorPicker.
	* CHANGE:	Update the copyright notice.

2022-12-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the JavaFX Texture API.
	* CHANGE:	Update the primitive toggle feature. The selection is more pronounced. It is now also supported by the ray casting and ray tracing algorithms.
	* CHANGE:	Update the dependency to Macroing Java.
	* REMOVE:	Remove the Doubles class.

2022-12-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getPrimitiveInstanceID() and togglePrimitiveInstanceID(int) to the Scene class.
	* ADD:		Add the methods setPrimitiveInstanceID(int), primitiveGetInstanceIDLHS() and primitiveGetInstanceIDRHS() to the AbstractSceneKernel class.
	* ADD:		Add primitive toggle support to the GPU renderer.
	* CHANGE:	Change the UI for the texture creation tool in the application.

2022-12-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a requirement to the environment variable JAVAFX_HOME in the Apache Ant build file. It should point to the root of JavaFX, which contains the bin and lib directories. This is a fix for an issue that started recently. For some reason the build script started to fail. Perhaps due to a recent upgrade to Windows 11.

2022-12-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Replace some usage of methods and constants in the Floats class in the Utility API with methods and constants from the Floats and Randoms classes in Macroing Java.

2022-12-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for more textures in the GUI.
	* CHANGE:	Replace some usage of methods and constants in the Floats class in the Utility API with methods and constants from the Floats and Randoms classes in Macroing Java.

2022-12-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		It is now possible to add primitives to and remove primitives from the GPU renderer. Some optimizations should still be added when removing primitives. When no shapes, materials and textures etc. are used by any primitives, they should be removed to keep the scene size as small as possible.
	* ADD:		It is now possible to define simple textures that will be used when adding primitives. This feature is not final and will be changed in the future. It is a temporary solution.
	* CHANGE:	Fix a bug when sampling Sphere3D and Sphere3F.

2022-12-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Replace most methods and constants in the Doubles class in the Utility API with methods and constants from the Doubles and Randoms classes in Macroing Java.
	* REMOVE:	Remove the method radicalInverse(int, long) from the Floats class.
	* REMOVE:	Remove the Longs class.

2022-12-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add initial support for creating primitives via the GUI in the GPU renderer.

2022-12-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods imageToneMapFilmicCurve(float, float, float, float, float, float, float, float), imageToneMapFilmicCurveACESModifiedVersion1(float), imageToneMapReinhard(float), imageToneMapReinhardModifiedVersion1(float), imageToneMapReinhardModifiedVersion2(float) and imageToneMapUnreal3(float) to the AbstractImageKernel class.
	* CHANGE:	Fix a bug with sphere sampling in the GPU-renderer.

2022-12-12  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix a bug in CompiledShape3FCache that made some triangle meshes to fail.
	* REMOVE:	Remove the Bytes class.

2022-12-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* REMOVE:	Remove floating-point error computations to simplify the APIs. They were mostly unused and probably incorrect.

2022-12-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for DiffuseAreaLight to the GPU-renderer. It's not fully functional yet, but close enough for now.

2022-10-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the dependency to Macroing Art4J, for Java 8.
	* CHANGE:	Update the dependency to Macroing Java, for Java 8.

2022-10-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method onUpdate(Scene, float) to the SceneObserver interface and a default no-op implementation to the AbstractSceneObserver class.
	* ADD:		Add the method update() to the Scene class. This method will compute the delta and pass it to the onUpdate(Scene, float) method for all SceneObserver instances that have been added.
	* ADD:		Add the Animation.java scene file to show how animations can be performed. It works best on the GPU at this point.

2022-10-21  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the dependency to Macroing Art4J.
	* CHANGE:	Update the dependency to Macroing Java.

2022-10-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods isSamplingCenter() and setSamplingCenter(boolean) to the Camera class.
	* ADD:		Add the DepthCamera.java scene file to simulate a depth camera.
	* ADD:		Add a new Depth Camera rendering algorithm. It works in both CPU- and GPU-renderers.

2022-09-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a dependency to the new "official" Aparapi from Syncleus. This was necessary in order to support newer OpenCL versions, such as version 3.0.
	* ADD:		Add a dependency to Apache BCEL, in order for the new Aparapi dependency to work.
	* CHANGE:	Update the AbstractGPURenderer and AbstractKernel classes. They now use the new Aparapi version.
	* CHANGE:	Add a missing final modifier to the Doubles class.
	* REMOVE:	Remove the old dependency to Macroing / Aparapi.

2022-09-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the dependency to Macroing Art4J.
	* REMOVE:	Remove the Color API. It can be found in the Art4J library.

2022-08-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a dependency to Macroing Art4J. Its repository is currently in private mode.
	* CHANGE:	Update the dependency to Macroing Java.
	* REMOVE:	Remove ArrayComponentOrder and PackedIntComponentOrder from the Color API. They can be found in the Art4J library.
	* REMOVE:	Remove the Filter API. It can be found in the Art4J library.
	* REMOVE:	Remove the Noise API. It can be found in the Art4J library.
	* REMOVE:	Remove ChromaticSpectralCurveD, Color, Color3D, Color4D, ColorSpaceD, ConstantSpectralCurveD, IrregularSpectralCurveD, RegularSpectralCurveD and SpectralCurveD from the Color API. Most of them can be found in the Art4J library.
	* REMOVE:	Remove ByteImageD, ConvolutionKernel33D, ConvolutionKernel55D, DoubleImageD, ImageD, IntImageD and PixelImageD from the Image API. Some replacements for them can be found in the Art4J library.

2022-08-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* REMOVE:	Remove the Image 2 API again. The API has been moved to a separate library. This new library will likely replace the Change API, Color API, Filter API, Image API and Noise API in the future. It is currently in a private repository.

2022-07-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods random(double), random(double, double) and rint(double) to the Doubles class.
	* ADD:		Add the methods random(float), random(float, float) and rint(float) to the Floats class.
	* ADD:		Add the ConvolutionKernelNF class.
	* ADD:		Add new float-based methods to the Color class.
	* CHANGE:	Update the Image 2 API.
	* CHANGE:	Refactor the Color API and update all affected APIs.

2022-07-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the NodeCacheUnitTests class.
	* ADD:		Add the RenderingAlgorithmUnitTests class.
	* ADD:		Add unit tests to the PackedIntComponentOrderUnitTests class.
	* ADD:		Add the methods blend(Color4D, Color4D, Color4D, Color4D, double, double), getCached(Color4D), getCacheSize() and clearCache() to the Color4D class.
	* ADD:		Add the methods blend(Color4F, Color4F, Color4F, Color4F, float, float), getCached(Color4F), getCacheSize() and clearCache() to the Color4F class.
	* ADD:		Add the Color class that contains color operations for primitive types.
	* ADD:		Add the Image 2 API. This API may replace the Image API in the future. But it is not ready yet.
	* ADD:		Add the constructor Color4D(Color4F) to the Color4D class.
	* ADD:		Add the constructor Color4F(Color4D) to the Color4F class.
	* ADD:		Add the method blend(Color3D, Color3D, Color3D, Color3D, double, double) to the Color3D class.
	* ADD:		Add the method blend(Color3F, Color3F, Color3F, Color3F, float, float) to the Color3F class.
	* ADD:		Add the constructor Color3D(Color4F) to the Color3D class.
	* ADD:		Add the constructor Color3F(Color4D) to the Color3F class.

2022-06-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods perspective(AngleD, double, double, double) and screenSpaceTransform(double, double) to the Matrix44D class.
	* ADD:		Add the methods perspective(AngleF, float, float, float) and screenSpaceTransform(float, float) to the Matrix44F class.

2022-06-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the DoublesUnitTests, FloatsUnitTests and IntsUnitTests classes.
	* ADD:		Add unit tests to the AxisAlignedBoundingBox3DUnitTests, AxisAlignedBoundingBox3FUnitTests, BoundingSphere3DUnitTests, BoundingSphere3FUnitTests, InfiniteBoundingVolume3DUnitTests and InfiniteBoundingVolume3FUnitTests classes.
	* ADD:		Add the NodeMockA and NodeMockB classes that implements Node.
	* ADD:		Add the NodeFilterMock class that implements NodeFilter.
	* ADD:		Add the NodeFilterUnitTests and NodeTraversalExceptionUnitTests classes.
	* ADD:		Add the methods transform(Triangle3D, Matrix44D, Matrix44D) and transformAndDivide(Triangle3D, Matrix44D, Matrix44D) to the Triangle3D class.
	* ADD:		Add the method isInsideViewFrustum() to the Triangle3D.Vertex3D class.
	* ADD:		Add the methods transform(Triangle3F, Matrix44F, Matrix44F) and transformAndDivide(Triangle3F, Matrix44F, Matrix44F) to the Triangle3F class.
	* ADD:		Add the method isInsideViewFrustum() to the Triangle3F.Vertex3F class.
	* ADD:		Add the constructor Triangle3D(Vertex3D, Vertex3D, Vertex3D, boolean) to the Triangle3D class.
	* ADD:		Add the constructor Triangle3F(Vertex3F, Vertex3F, Vertex3F, boolean) to the Triangle3F class.
	* ADD:		Add the constructor Vertex3D(Point2D, Point4D, Vector3D, boolean) to the Triangle3D.Vertex3D class.
	* ADD:		Add the constructor Vertex3F(Point2F, Point4F, Vector3F, boolean) to the Triangle3F.Vertex3F class.
	* ADD:		Add the method lookAt(Point3F, Vector3F) to the Transform class.
	* ADD:		Add the method rotate(Quaternion4D, Vector3D) to the Vector3D class.
	* ADD:		Add the method rotate(Quaternion4F, Vector3F) to the Vector3F class.
	* REMOVE:	Remove the method findInterval(int, IntPredicate) from the Ints class. The method has been moved to the Distribution1F class.
	* REMOVE:	Remove the AbstractReflectiveNodeHierarchicalVisitor class.

2022-05-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor parts of the GPU-renderer.

2022-05-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor parts of the GPU-renderer.

2022-05-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor parts of the GPU-renderer.

2022-05-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Vector3DUnitTests and Vector3FUnitTests classes.
	* CHANGE:	Refactor parts of the GPU-renderer.
	* REMOVE:	Remove the method refraction2(Vector3D, Vector3D, double) from the Vector3D class.
	* REMOVE:	Remove the method refraction2(Vector3F, Vector3F, float) from the Vector3F class.

2022-05-21  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	The fields of the Matrix33D, Matrix33F, Matrix44D, Matrix44F, OrthonormalBasis33D and OrthonormalBasis33F classes have been made public.
	* CHANGE:	Update all classes and unit tests that have been affected by the change in the Matrix33D, Matrix33F, Matrix44D, Matrix44F, OrthonormalBasis33D and OrthonormalBasis33F classes.
	* REMOVE:	Remove the methods getElement11(), getElement12(), getElement13(), getElement21(), getElement22(), getElement23(), getElement31(), getElement32() and getElement33() from the Matrix33D and Matrix33F classes.
	* REMOVE:	Remove the methods getElement11(), getElement12(), getElement13(), getElement14(), getElement21(), getElement22(), getElement23(), getElement24(), getElement31(), getElement32(), getElement33(), getElement34(), getElement41(), getElement42(), getElement43() and getElement44() from the Matrix44D and Matrix44F classes.
	* REMOVE:	Remove the methods getU(), getV() and getW() from the OrthonormalBasis33D and OrthonormalBasis33F classes.

2022-05-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Rename the methods negateComponent1(Vector3D), negateComponent2(Vector3D) and negateComponent3(Vector3D) in the Vector3D class to negateX(Vector3D), negateY(Vector3D) and negateZ(Vector3D), respectively.
	* CHANGE:	Rename the methods faceForwardComponent3(Vector3D, Vector3D) and faceForwardComponent3Negated(Vector3D, Vector3D) in the Vector3D class to faceForwardZ(Vector3D, Vector3D) and faceForwardZNegated(Vector3D, Vector3D), respectively.
	* CHANGE:	Rename the methods negateComponent1(Vector3F), negateComponent2(Vector3F) and negateComponent3(Vector3F) in the Vector3F class to negateX(Vector3F), negateY(Vector3F) and negateZ(Vector3F), respectively.
	* CHANGE:	Rename the methods faceForwardComponent3(Vector3F, Vector3F) and faceForwardComponent3Negated(Vector3F, Vector3F) in the Vector3F class to faceForwardZ(Vector3F, Vector3F) and faceForwardZNegated(Vector3F, Vector3F), respectively.
	* CHANGE:	Update all classes and unit tests that have been affected by the change in the Quaternion4D, Quaternion4F, Vector3D and Vector3F classes.
	* CHANGE:	Rename the fields component1, component2, component3 and component4 in the Quaternion4D and Quaternion4F classes to x, y, z and w, respectively. They have also been made public.
	* REMOVE:	Remove the methods getComponent1(), getComponent2(), getComponent3(), getU(), getV(), getW(), getX(), getY() and getZ() from the Vector3D and Vector3F classes.
	* REMOVE:	Remove the methods getComponent1(), getComponent2(), getComponent3(), getComponent4(), getW(), getX(), getY() and getZ() from the Quaternion4D and Quaternion4F classes.

2022-05-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Rename the fields component1 and component2 in the Point2I and Vector2I classes to x and y, respectively. They have also been made public.
	* CHANGE:	Update all classes and unit tests that have been affected by the change in the Point2I and Vector2I classes.
	* CHANGE:	Rename the fields component1, component2 and component3 in the Point3D, Point3F, Vector3D and Vector3F classes to x, y and z, respectively. They have also been made public.
	* CHANGE:	Rename the fields component1, component2, component3 and component4 in the Point4D, Point4F, Vector4D and Vector4F classes to x, y, z and w, respectively. They have also been made public.
	* CHANGE:	Update all classes and unit tests that have been affected by the change in the Point3D, Point3F, Point4D, Point4F, Vector4D and Vector4D classes.
	* REMOVE:	Remove the methods getComponent1(), getComponent2(), getU(), getV(), getX() and getY() from the Point2I and Vector2I classes.
	* REMOVE:	Remove the methods getComponent1(), getComponent2(), getComponent3(), getComponent4(), getW(), getX(), getY() and getZ() from the Point4D, Point4F, Vector4D and Vector4F classes.
	* REMOVE:	Remove the methods getComponent1(), getComponent2(), getComponent3(), getU(), getV(), getW(), getX(), getY() and getZ() from the Point3D and Point3F classes.

2022-05-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Rename the method rotate(Point2D, AngleD) in the Point2D class to rotateCounterclockwise(Point2D, AngleD).
	* CHANGE:	Rename the method rotate(Point2F, AngleF) in the Point2F class to rotateCounterclockwise(Point2F, AngleF).
	* CHANGE:	Rename the fields component1 and component2 in the Point2D, Point2F, Vector2D and Vector2F classes to x and y, respectively. They have also been made public.
	* CHANGE:	Update all classes and unit tests that have been affected by the change in the Point2D, Point2F, Vector2D and Vector2F classes.
	* REMOVE:	Remove the methods addDistanceKm(Point2D, double, double), distanceKm(Point2D, Point2D), getComponent(int), getComponent1(), getComponent2(), getLatitude(), getLongitude(), getU(), getV(), getX() and getY() from the Point2D class.
	* REMOVE:	Remove the methods addDistanceKm(Point2F, float, float), distanceKm(Point2F, Point2F), getComponent(int), getComponent1(), getComponent2(), getLatitude(), getLongitude(), getU(), getV(), getX() and getY() from the Point2F class.
	* REMOVE:	Remove the methods getComponent1(), getComponent2(), getU(), getV(), getX(), getY(), negateComponent1(Vector2D), negateComponent2(Vector2D), u(), u(double), v() and v(double) from the Vector2D class.
	* REMOVE:	Remove the methods getComponent1(), getComponent2(), getU(), getV(), getX(), getY(), negateComponent1(Vector2F), negateComponent2(Vector2F), u(), u(float), v() and v(float) from the Vector2F class.

2022-05-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Sphere3DUnitTests class.

2022-05-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Plane3FUnitTests class.
	* CHANGE:	Update the Plane3D class so that it is located on the point [0.0, 0.0, 0.0] and has a surface normal of [0.0, 0.0, 1.0]. Its variables have been removed.
	* CHANGE:	Update the Plane3F class so that it is located on the point [0.0, 0.0, 0.0] and has a surface normal of [0.0, 0.0, 1.0]. Its variables have been removed.
	* CHANGE:	Update the Sphere3D class so that it is located on the point [0.0, 0.0, 0.0] and has a radius of 1.0. Its variables have been removed.
	* CHANGE:	Update the Sphere3F class so that it is located on the point [0.0, 0.0, 0.0] and has a radius of 1.0. Its variables have been removed.
	* CHANGE:	Update the Plane3DUnitTests class.
	* CHANGE:	Update the Plane3DReader and Plane3FReader classes because of the changes to Plane3D and Plane3F, respectively.
	* CHANGE:	Update the Sphere3DReader and Sphere3FReader classes because of the changes to Sphere3D and Sphere3F, respectively.
	* CHANGE:	Update the AbstractSceneKernel, AbstractShape3FKernel and CompiledShape3FCache classes because of the changes to Plane3F and Sphere3F.
	* REMOVE:	Remove the Demo class.

2022-04-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Polygon2DReaderUnitTests, Polygon2DUnitTests, Polygon2FReaderUnitTests, Polygon2FUnitTests, Polygon2IReaderUnitTests and Polygon2IUnitTests classes.
	* ADD:		Add the method getPoints() to the Polygon2D and Polygon2F classes.
	* ADD:		Add the Plane3DUnitTests class.
	* CHANGE:	Update the equals(Object) and hashCode() methods in the Polygon2D, Polygon2F and Polygon2I classes.
	* CHANGE:	The points B and D in the Rectangle2D, Rectangle2F and Rectangle2I classes have been swapped by default. Before they were counter clockwise and now they are clockwise.
	* CHANGE:	Update the equals(Object) and hashCode() methods in the Plane3D and Plane3F classes.

2022-04-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Triangle2DReaderUnitTests, Triangle2DUnitTests, Triangle2FReaderUnitTests, Triangle2FUnitTests and Triangle2IReaderUnitTests classes.
	* CHANGE:	Fix spelling mistakes in the copyright notice of some unit test files.

2022-04-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Rectangle2IUnitTests class.
	* ADD:		Add the Rectangle2DReaderUnitTests, Rectangle2DUnitTests, Rectangle2FReaderUnitTests, Rectangle2FUnitTests, Rectangle2IReaderUnitTests and Triangle2IUnitTests classes.
	* CHANGE:	Update the equals(Object), hashCode() and toString() methods in the Rectangle2D and Rectangle2F classes.
	* CHANGE:	Update the equals(Object) and hashCode() methods in the Triangle2I class.

2022-04-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Rectangle2IUnitTests class.

2022-04-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the BoxFilter2DUnitTests, BoxFilter2FUnitTests, CatmullRomFilter2DUnitTests, CatmullRomFilter2FUnitTests, GaussianFilter2DUnitTests, GaussianFilter2FUnitTests, LanczosSincFilter2DUnitTests, LanczosSincFilter2FUnitTests, MitchellFilter2DUnitTests, MitchellFilter2FUnitTests, TriangleFilter2DUnitTests and TriangleFilter2FUnitTests classes.
	* ADD:		Add the constructor CatmullRomFilter2D() to the CatmullRomFilter2D class.
	* ADD:		Add the constructor CatmullRomFilter2F() to the CatmullRomFilter2F class.
	* CHANGE:	Update the equals(Object), hashCode() and toString() methods in the BoxFilter2D, BoxFilter2F, CatmullRomFilter2D, CatmullRomFilter2F, GaussianFilter2D, GaussianFilter2F, LanczosSincFilter2D, LanczosSincFilter2F, MitchellFilter2D, MitchellFilter2F, TriangleFilter2D and TriangleFilter2F classes.
	* CHANGE:	Update the method evaluate(double, double) in the CatmullRomFilter2D class.
	* CHANGE:	Update the method evaluate(float, float) in the CatmullRomFilter2F class.
	* REMOVE:	Remove the constructor CatmullRomFilter2D(double, double) from the CatmullRomFilter2D class.
	* REMOVE:	Remove the constructor CatmullRomFilter2F(float, float) from the CatmullRomFilter2F class.
	* REMOVE:	Remove the method intersection(Rectangle2D, Rectangle2D) from the Rectangle2D class.
	* REMOVE:	Remove the method intersection(Rectangle2F, Rectangle2F) from the Rectangle2F class.
	* REMOVE:	Remove the method intersection(Rectangle2I, Rectangle2I) from the Rectangle2I class.

2022-04-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the IntsUnitTests class.
	* CHANGE:	Update the dependency to Macroing Java.
	* CHANGE:	Rename the method errorReciprocal(double) in the Doubles class to errorInverse(double).
	* CHANGE:	Rename the method errorReciprocal(float) in the Floats class to errorInverse(float).
	* REMOVE:	Remove the Timer class. It has been replaced by the Timer class in Macroing Java.

2022-04-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the dependency to Macroing Java.
	* REMOVE:	Remove the methods create(int), create(int, byte) and create(int, byte, byte, byte, byte) from the ByteArrays class. These methods have been replaced by Arrays.repeat(byte[], int) in Macroing Java.
	* REMOVE:	Remove the DoubleArrays class. The method create(int, double, double, double, double) has been replaced by Arrays.repeat(double[], int) in Macroing Java.
	* REMOVE:	Remove the method merge(float[]...) from the FloatArrays class. It has been replaced by Arrays.merge(float[]...) in Macroing Java.
	* REMOVE:	Remove the methods merge(int[], int), merge(int[], int[]) and merge(int[]...) from the IntArrays class. These methods have been replaced by Arrays.merge(int[]...) in Macroing Java.
	* REMOVE:	Remove the ByteArrays class. The method convert(int[]) has been replaced by Arrays.toByteArray(int[]) in Macroing Java.
	* REMOVE:	Remove the methods convert(List<T>, Function<T, int[]>) and convert(List<T>, Function<T, int[]>, int) from the IntArrays class. These methods have been replaced by Arrays.toIntArray(List<T>, Function<T, int[]>) in Macroing Java.
	* REMOVE:	Remove the methods create(int) and create(int, int) from the IntArrays class. These methods have been replaced by Arrays.repeat(int[], int) in Macroing Java.
	* REMOVE:	Remove the method equal(int[], int[], int, int, int) from the IntArrays class. This method has been replaced by Arrays.equals(int[], int[], int, int, int) in Macroing Java.
	* REMOVE:	Remove the methods convert(List<T>, Function<T, float[]>) and convert(List<T>, Function<T, float[]>, int) from the FloatArrays class. These methods have been replaced by Arrays.toFloatArray(List<T>, Function<T, float[]>) in Macroing Java.
	* REMOVE:	Remove the methods create(int), create(int, FloatSupplier), create(int, float) and create(int, float, float, float, float) from the FloatArrays class. These methods have been replaced by Arrays.repeat(float[], int) in Macroing Java.
	* REMOVE:	Remove the method equal(float[], float[], int, int, int) from the FloatArrays class. This method has been replaced by Arrays.equals(float[], float[], int, int, int) in Macroing Java.
	* REMOVE:	Remove the LongArrays class. The method create(int, LongSupplier) has been replaced by Arrays.generateLongArray(int, IntToLongFunction) in Macroing Java.
	* REMOVE:	Remove the method indexOf(float[], float[], boolean, boolean) from the FloatArrays class. This method has been replaced by Arrays.indexOf(float[], float[], boolean, boolean) in Macroing Java.
	* REMOVE:	Remove the methods indexOf(int, int[]) and indexOf(int[], int[], boolean, boolean) from the IntArrays class. These methods have been replaced by Arrays.indexOf(int, int[]) and Arrays.indexOf(int[], int[], boolean, boolean) in Macroing Java.
	* REMOVE:	Remove the FloatArrays class. The methods splice(float[], int), splice(float[], int, int), splice(float[], int, int, float[]) and splice(float[], int, int, float[], float[]) have been replaced by Arrays.splice(float[], int), Arrays.splice(float[], int, int) and Arrays.splice(float[], int, int, float[]) in Macroing Java.
	* REMOVE:	Remove the IntArrays class. The methods splice(int[], int), splice(int[], int, int), splice(int[], int, int, int[]) and splice(int[], int, int, int[], int[]) have been replaced by Arrays.splice(int[], int), Arrays.splice(int[], int, int) and Arrays.splice(int[], int, int, int[]) in Macroing Java.

2022-04-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix a bug in the GPU-based version of GlassMaterial. The DielectricFresnel-based SpecularBRDF type used the R-, G- and B-components in reverse order.

2022-04-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a dependency to Macroing Java.
	* CHANGE:	Move PixelD to PixelImageD.PixelD. It is now a nested class rather than a top level class.
	* CHANGE:	Move PixelF to PixelImageF.PixelF. It is now a nested class rather than a top level class.
	* REMOVE:	Remove the Java AWT Image API.
	* REMOVE:	Remove the Java I/O API.
	* REMOVE:	Remove the Java Lang API.
	* REMOVE:	Remove the Java Util API.
	* REMOVE:	Remove the Java Util Concurrent Atomic API.
	* REMOVE:	Remove the Java Util Function API.

2022-04-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the ByteArraysUnitTests, DoubleArraysUnitTests, DoublesUnitTests, IntsUnitTests and LongArraysUnitTests classes.
	* ADD:		Add unit tests to the FloatsUnitTests class.
	* CHANGE:	Fix a bug in the method indexOf(byte[], byte[], boolean, boolean) in the ByteArrays class.
	* CHANGE:	Fix a bug in the method indexOf(long[], long[], boolean, boolean) in the LongArrays class.
	* REMOVE:	Remove the methods equal(byte[], byte[], int, int, int), indexOf(byte, byte[]), indexOf(byte[], byte[], boolean, boolean), merge(byte[], byte), merge(byte[], byte[]), splice(byte[], int), splice(byte[], int, int), splice(byte[], int, int, byte[]) and splice(byte[], int, int, byte[], byte[]) from the ByteArrays class.
	* REMOVE:	Remove the methods convert(List<T>, Function<T, long[]>), convert(List<T>, Function<T, long[]>, int), convert(byte[]), convert(byte[], boolean), create(int), create(int, long), equal(long[], long[], int, int, int), indexOf(long, long[]), indexOf(long[], long[], boolean, boolean), merge(long[], long), merge(long[], long[]), merge(long[]...), splice(long[], int), splice(long[], int, int), splice(long[], int, int, long[]) and splice(long[], int, int, long[], long[]) from the LongArrays class.
	* REMOVE:	Remove the methods convert(List<T>, Function<T, double[]>), convert(List<T>, Function<T, double[]>, int), create(int), create(int, DoubleSupplier), create(int, double), equal(double[], double[], int, int, int), indexOf(double, double[]), indexOf(double[], double[], boolean, boolean), merge(double[], double), merge(double[], double[]), merge(double[]...), splice(double[], int), splice(double[], int, int), splice(double[], int, int, double[]) and splice(double[], int, int, double[], double[]) from the DoubleArrays class.
	* REMOVE:	Remove the methods indexOf(float, float[]), merge(float[], float) and merge(float[], float[]) from the FloatArrays class.
	* REMOVE:	Remove the methods convert(byte[]), convert(byte[], boolean) and create(int, IntSupplier) from the IntArrays class.
	* REMOVE:	Remove the Simplex API.
	* REMOVE:	Remove the Sound API.
	* REMOVE:	Remove the FilterNB interface and the EchoFilterNB class from the Filter API.
	* REMOVE:	Remove the CircularBuffer and CircularBufferException classes from the Utility API.

2022-03-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the FloatsUnitTests class.
	* REMOVE:	Remove the method remainder(double, double) from the Doubles class. Use the % operator instead. It worked almost like %, with some differences for the sign.
	* REMOVE:	Remove the method remainder(float, float) from the Floats class. Use the % operator instead. It worked almost like %, with some differences for the sign.

2022-03-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the BytesUnitTests, LongsUnitTests and ParameterArgumentsUnitTests classes.
	* CHANGE:	Move the tan-computations for the field of view of the camera from AbstractSceneKernel to CompiledCameraCache. This is a minor optimization.

2022-03-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for ImageLight to the GPU renderer.
	* CHANGE:	Refactor the classes AbstractLightKernel, AbstractSceneKernel, CompiledLightCache and CompiledSceneModifier in order to remove support for the LDRImageLight class and add support for the ImageLight class.
	* REMOVE:	Remove the HDRImageLight and LDRImageLight classes.

2022-03-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the ImageLight class. This one will soon replace the new HDRImageLight class and the old LDRImageLight class. Support for it on the GPU is required first.
	* ADD:		Add the HDRImageLight class.
	* ADD:		Add the methods toDoubleArray() and toDoubleArray(ArrayComponentOrder) to the ImageD class.
	* ADD:		Add the methods toFloatArray() and toFloatArray(ArrayComponentOrder) to the ImageF class.
	* CHANGE:	Fix a bug in the method getPixel(int, int, PixelOperation) in the classes PixelImageD and PixelImageF.
	* CHANGE:	Fix a bug in the methods undoGammaCorrection() and update(BiFunction<Color4D, Point2I, Color4D>, Rectangle2I) in the ImageD class.
	* CHANGE:	Fix a bug in the methods undoGammaCorrection() and update(BiFunction<Color4F, Point2I, Color4F>, Rectangle2I) in the ImageF class.
	* TEST:		The updated JavaSceneLoader class has been tested using Java 11.

2022-03-21  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a run.bat file that is copied to the distribution when building the project using Apache Ant.
	* CHANGE:	Update the JavaSceneLoader class. The changes had to be made in order to support Java 11. In Java 9, Field.isAccessible() is deprecated. Calling Field.setAccessible(boolean) resulted in an illegal access in Java 11 (and possibly Java 9). In Java 9, ClassLoader.getSystemClassLoader() does not return a URLClassLoader anymore, which also had to be fixed. This change has only been partially tested in Java 11 at this point.

2022-03-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix Javadoc issues in the TrowbridgeReitzMicrofacetDistribution class.
	* CHANGE:	Fix Javadoc issues in the AbstractMaterialKernel class.

2022-03-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the default values passed to the constructors of the PlasticMaterial class.
	* CHANGE:	Update the GPURenderer and PlasticMaterial scenes to use the default PlasticMaterial configuration.
	* CHANGE:	Update the native files for Aparapi. So Dayflower may work on other operating systems or architectures now. But it has not been tested yet.

2022-03-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Rectangle2IUnitTests class.
	* ADD:		Add the methods fillRegion(int, int, BiFunction<Color4D, Point2I, Color4D>) and fillRegion(int, int, BiFunction<Color4D, Point2I, Color4D>, BiPredicate<Color4D, Point2I>) to the ImageD class.
	* ADD:		Add the methods fillRegion(int, int, BiFunction<Color4F, Point2I, Color4F>) and fillRegion(int, int, BiFunction<Color4F, Point2I, Color4F>, BiPredicate<Color4F, Point2I>) to the ImageF class.
	* ADD:		Add the constant IDENTITY to the ConvolutionKernel33D, ConvolutionKernel33F, ConvolutionKernel55D and ConvolutionKernel55F classes.
	* ADD:		Add the method pow2(double) to the Doubles class.
	* ADD:		Add the method pow2(float) to the Floats class.
	* CHANGE:	Refactor the name of the method sampleNormal(Vector3F, Point2F) in the MicrofacetDistribution, BeckmannMicrofacetDistribution and TrowbridgeReitzMicrofacetDistribution classes to sampleHalfway(Vector3F, Point2F).
	* CHANGE:	Refactor the name of the parameter normal in the method computeDifferentialArea(Vector3F) in the MicrofacetDistribution, BeckmannMicrofacetDistribution and TrowbridgeReitzMicrofacetDistribution classes to halfway.
	* CHANGE:	Refactor the name of the parameter normal in the method computeProbabilityDensityFunctionValue(Vector3F, Vector3F) in the MicrofacetDistribution class to halfway.
	* CHANGE:	Update the random() method in the Doubles and Floats classes to use ThreadLocalRandom instead of a Random class.
	* CHANGE:	Refactor the method addButton(String, EventHandler<ActionEvent>) in the CenteredVBox class to addButton(String, EventHandler<ActionEvent>, boolean). The boolean parameter is used for the disabled state.
	* CHANGE:	Update the GUI to disable certain buttons when running the GPU renderer. The functionality of these buttons are not supported by it yet.
	* CHANGE:	Rename the constant EDGE_DETECTION in the ConvolutionKernel33D and ConvolutionKernel33F classes to RIDGE_DETECTION.
	* CHANGE:	Change the Edge Detection operation in the ScreenRendererApplication to Ridge Detection.
	* CHANGE:	Update the toString() method of the Rectangle2I class.
	* REMOVE:	Remove the method image4DTextureGetColor4D(double[], double) from the Texture class in the Simplex API.
	* REMOVE:	Remove the methods getHeight() and getWidth() from the Rectangle2D, Rectangle2F and Rectangle2I classes.

2022-03-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	When DayflowerApplication was rendering and was closed, the program would not terminate. This has been fixed. The bug was described in issue #3.

2022-02-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Color3DUnitTests, Color3FUnitTests, Color4DUnitTests and Color4FUnitTests classes.

2022-02-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method sobel() to the ImageD and ImageF classes.
	* ADD:		Add the method toBufferedImage(boolean) to the Image class. If the boolean parameter is true, the BufferedImage will use BufferedImage.TYPE_INT_RGB instead of BufferedImage.TYPE_INT_ARGB.
	* CHANGE:	Fix the save(...) methods in the Image class to work with JPEG images. Previously images saved as JPEG would be somewhat pink. This was caused by the alpha-channel.

2022-01-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method contains(Point3D) to the CompoundShape3D, Cone3D, ConstructiveSolidGeometry3D, Curve3D, Cylinder3D, Disk3D, Hyperboloid3D, Paraboloid3D, Torus3D and TriangleMesh3D classes.
	* ADD:		Add the method contains(Point3F) to the CompoundShape3F, Cone3F, ConstructiveSolidGeometry3F, Curve3F, Cylinder3F, Disk3F, Hyperboloid3F, Paraboloid3F, Torus3F and TriangleMesh3F classes.
	* ADD:		Add the method contains(Point3D) to the Shape3D interface.
	* ADD:		Add the method contains(Point3F) to the Shape3F interface.

2022-01-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the AngleDUnitTests and AngleFUnitTests classes.
	* CHANGE:	Fix a bug in the method wrapAround(double, double, double) in the Doubles class.
	* CHANGE:	Fix a bug in the method wrapAround(float, float, float) in the Floats class.
	* CHANGE:	Fix unit tests in the AngleDUnitTests and AngleFUnitTests classes.

2022-01-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the AngleDUnitTests and AngleFUnitTests classes.
	* CHANGE:	Update the copyright notice for the Scene API, Scene BSSRDF API, Scene BXDF API, Scene Compiler API, Scene Demo API, Scene Fresnel API, Scene Light API, Scene Loader API, Scene Material API, Scene Microfacet API, Scene Modifier API, Scene Texture API, Simplex API, Sound API, Utility API, Wavefront Material API, Wavefront Object API and Test APIs.
	* CHANGE:	Update the toString() method of the AngleD and AngleF classes.

2022-01-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the copyright notice for the JavaFX Application API, JavaFX Concurrent API, JavaFX Scene Canvas API, JavaFX Scene Control API, JavaFX Scene Image API, JavaFX Scene Layout API, Node API, Noise API, Parameter API, Renderer API, Renderer CPU API, Renderer GPU API, Renderer Observer API and Sampler API.

2022-01-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the copyright notice for the Geometry Bounding Volume API, Geometry Bounding Volume Hierarchy API, Geometry Rasterizer API, Geometry Shape API, Image API, Java AWT Image API, Java I/O API, Java Lang API, Java Util API, Java Util Concurrent Atomic API and Java Util Function API.

2022-01-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the copyright notice for the Change API, Color API, Filter API and Geometry API.

2021-12-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for creating a more compact form of the BVH in the GPU-renderer. It is a little bit faster in some cases.

2021-12-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the AbstractBoundingVolume3FKernel and AbstractShape3FKernel classes.
	* CHANGE:	Change the compiled representations of the AxisAlignedBoundingBox3F and BoundingSphere3F classes to be referenced using relative instead of absolute offsets.
	* CHANGE:	Update the super class of the AbstractModifierKernel class from AbstractGeometryKernel to AbstractShape3FKernel.
	* REMOVE:	Remove all methods related to BoundingVolume3F and Shape3F types from the AbstractGeometryKernel class.

2021-12-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Circle2IUnitTests and LineSegment2IUnitTests classes.
	* ADD:		Add the methods getMaximum() and getMinimum() to the Circle2I, LineSegment2I, Polygon2I, Rectangle2I and Triangle2I classes.
	* ADD:		Add the methods getMaximum() and getMinimum() to the Shape2I interface.
	* ADD:		Add unit tests to the Point2IUnitTests class.
	* ADD:		Add the methods maximum(Point2I, Point2I, Point2I, Point2I) and minimum(Point2I, Point2I, Point2I, Point2I) to the Point2I class.
	* ADD:		Add the methods max(int, int, int, int) and min(int, int, int, int) to the Ints class.
	* ADD:		Add the LineSegment2DReaderUnitTests, LineSegment2FReaderUnitTests and LineSegment2IReaderUnitTests classes.
	* CHANGE:	Update the method getBounds() of the Image class.
	* CHANGE:	Change the copy() method of the ImageD and ImageF classes from abstract to final and call copy(Shape2I) with getBounds() as parameter.
	* CHANGE:	Change the abstract copy(Rectangle2I) methods of the ImageD and ImageF classes to final copy(Shape2I) methods and add implementations.
	* CHANGE:	Change the copy(Rectangle2I) method of the Image class to copy(Shape2I).
	* CHANGE:	Update the union(Rectangle2D, Rectangle2D) method in the Rectangle2D class to handle rotated Rectangle2D instances correctly.
	* CHANGE:	Update the union(Rectangle2F, Rectangle2F) method in the Rectangle2F class to handle rotated Rectangle2F instances correctly.
	* CHANGE:	Update the union(Rectangle2I, Rectangle2I) method in the Rectangle2I class to handle rotated Rectangle2I instances correctly.
	* REMOVE:	Remove the copy() and copy(Rectangle2I) methods from the ByteImageD, ByteImageF, DoubleImageD, FloatImageF, IntImageD, IntImageF, PixelImageD and PixelImageF classes.

2021-12-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getSurfaceNormalGCorrectlyOriented() and getSurfaceNormalSCorrectlyOriented() to the Intersection class.
	* CHANGE:	Update the GPU-renderer to use correctly oriented surface normals.
	* CHANGE:	Update the BSDF, Scene, PerezLight, ClearCoatMaterial and SurfaceNormalTexture classes to use the new getSurfaceNormalGCorrectlyOriented() and getSurfaceNormalSCorrectlyOriented() methods.
	* CHANGE:	Update the NormalMapLDRImageModifier class. It now uses the surface normal of the geometry in the calculations, rather than the one for shading.
	* CHANGE:	Update the NormalMapLDRImageModifier implementation in the AbstractGeometryKernel and AbstractModifierKernel classes. The bilinear interpolation is removed and the methods intersectionLHSSetOrthonormalBasisSWTransform(float, float, float) and intersectionRHSSetOrthonormalBasisSWTransform(float, float, float) now use the surface normal of the geometry in the calculations, rather than the one for shading.

2021-12-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the methods ray3FSetFromSurfaceIntersectionPointAndVector3FLHS() and ray3FSetFromSurfaceIntersectionPointAndVector3FRHS() in the AbstractGeometryKernel class to work more like the CPU renderer.
	* CHANGE:	Change back the precision of the cos() and sin() methods in the AngleF class. It did not work out in the end.
	* CHANGE:	Update unit tests in the Matrix44FUnitTests class.

2021-12-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods cos() and sin() to the AngleD and AngleF classes.
	* ADD:		Add unit tests to the Matrix44DUnitTests and Matrix44FUnitTests classes.
	* ADD:		Add unit tests to the Quaternion4DUnitTests and Quaternion4FUnitTests classes.
	* CHANGE:	Update unit tests in Matrix44FUnitTests to account for the precision changes in the Matrix44F class.
	* CHANGE:	Update the methods rotate(AngleD, Vector3D), rotate(AngleD, double, double, double), rotateX(AngleD), rotateY(AngleD) and rotateZ(AngleD) in the Matrix44D class to use the cos() and sin() methods provided by the AngleD class.
	* CHANGE:	Update the methods rotate(AngleF, Vector3F), rotate(AngleF, float, float, float), rotateX(AngleF), rotateY(AngleF) and rotateZ(AngleF) in the Matrix44F class to use the cos() and sin() methods provided by the AngleF class. This results in better precision. The methods rotateX(float), rotateX(float, boolean), rotateY(float), rotateY(float, boolean), rotateZ(float) and rotateZ(float, boolean) do not have this precision yet.
	* CHANGE:	Update the normalize(Quaternion4D) method in the Quaternion4D class. It now checks if it is normalized or not.
	* CHANGE:	Update the normalize(Quaternion4F) method in the Quaternion4F class. It now checks if it is normalized or not.

2021-12-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method orthonormalBasis33FSetFromUV(float, float, float, float, float, float) to the AbstractGeometryKernel class.

2021-12-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods intersectionLHSSetOrthonormalBasisGFromOrthonormalBasis33F(), intersectionLHSSetOrthonormalBasisSFromOrthonormalBasis33F(), intersectionRHSSetOrthonormalBasisGFromOrthonormalBasis33F() and intersectionRHSSetOrthonormalBasisSFromOrthonormalBasis33F() to the AbstractGeometryKernel class.
	* ADD:		Add unit tests to the OrthonormalBasis33DUnitTests and OrthonormalBasis33FUnitTests classes.
	* CHANGE:	Update the method orthonormalBasis33FSetFromWV(float, float, float, float, float, float) in the AbstractGeometryKernel class to normalize the U-direction. It was assumed it would be normalized by construction, but that may not always be the case.
	* CHANGE:	Update the methods intersectionLHSSetOrthonormalBasisSWTransform(float, float, float) and intersectionRHSSetOrthonormalBasisSWTransform(float, float, float) in the AbstractGeometryKernel class to also update the U- and V-directions.
	* CHANGE:	Update the methods setSurfaceNormalG(Vector3F) and setSurfaceNormalS(Vector3F) in the Intersection class to take OrthonormalBasis33F.getV() into account when creating a new OrthonormalBasis33F instance.
	* CHANGE:	Update the method sample(Point2D, SurfaceIntersection3D) in the Sphere3D class. The method coordinateSystem(Vector3D) in the OrthonormalBasis33D class was removed. The constructor OrthonormalBasis33D(Vector3D) is essentially the same.
	* CHANGE:	Update the method sample(Point2F, SurfaceIntersection3F) in the Sphere3F class. The method coordinateSystem(Vector3F) in the OrthonormalBasis33F class was removed. The constructor OrthonormalBasis33F(Vector3F) is essentially the same.
	* REMOVE:	Remove the methods coordinateSystem(Vector3D) and lerp(OrthonormalBasis33D, OrthonormalBasis33D, double) from the OrthonormalBasis33D class.
	* REMOVE:	Remove the methods coordinateSystem(Vector3F) and lerp(OrthonormalBasis33F, OrthonormalBasis33F, float) from the OrthonormalBasis33F class.

2021-12-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the OrthonormalBasis33DUnitTests and OrthonormalBasis33FUnitTests classes.
	* CHANGE:	Fix a cache issue in the Vector3DUnitTests and Vector3FUnitTests classes.

2021-12-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Quaternion4DUnitTests and Quaternion4FUnitTests classes.
	* ADD:		Add unit tests to the Matrix44DUnitTests and Matrix44FUnitTests classes.
	* CHANGE:	Change the aperture radius interval in the application.
	* CHANGE:	Update the toString() method of the Quaternion4D and Quaternion4F classes.

2021-12-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Point3DUnitTests and Point3FUnitTests classes.
	* CHANGE:	Update the method testReciprocal() in the Vector2DUnitTests and Vector2FUnitTests classes.
	* CHANGE:	Update the method reciprocal(Vector2D) in the Vector2D class.
	* CHANGE:	Update the method reciprocal(Vector2F) in the Vector2F class.

2021-12-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a unit test for Point2I.midpoint(Point2I, Point2I) to the Point2IUnitTests class.
	* ADD:		Add the method midpoint(Point2I, Point2I) to the Point2I class.
	* ADD:		Add the LineSegment2DUnitTests, LineSegment2FUnitTests and LineSegment2IUnitTests classes.

2021-12-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Circle2DReaderUnitTests, Circle2FReaderUnitTests and Circle2IReaderUnitTests classes.
	* CHANGE:	Update the method rotate(OrthonormalBasis33D) in the Matrix44D class. It may be slightly faster now.
	* CHANGE:	Update the method rotate(OrthonormalBasis33F) in the Matrix44F class. It may be slightly faster now.

2021-12-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Circle2DUnitTests and Circle2FUnitTests classes.
	* ADD:		Add the Circle2IUnitTests class.

2021-12-12  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a null check to the method read(DataInput, int) in all *Reader classes of the Geometry Shape API.
	* ADD:		Add the AxisAlignedBoundingBox3DReaderUnitTests, AxisAlignedBoundingBox3FReaderUnitTests, Circle2DUnitTests, Circle2FUnitTests, DefaultBoundingVolume3DReaderUnitTests and DefaultBoundingVolume3FReaderUnitTests classes.
	* ADD:		Add unit tests to the AxisAlignedBoundingBox3DUnitTests and AxisAlignedBoundingBox3FUnitTests classes.
	* CHANGE:	Update the toString() method of the Circle2D and Circle2F classes.
	* CHANGE:	Change the signature of the method union(AxisAlignedBoundingBox3D, Point3D) in the class AxisAlignedBoundingBox3D to union(BoundingVolume3D, Point3D).
	* CHANGE:	Change the signature of the method union(AxisAlignedBoundingBox3F, Point3F) in the class AxisAlignedBoundingBox3F to union(BoundingVolume3F, Point3F).
	* CHANGE:	Update the Vector3DUnitTests and Vector3FUnitTests classes.
	* CHANGE:	Update the method reciprocal(Vector3D) in the Vector3D class. It would return 0.0D for non-finite numbers, but that caused a bug in the AxisAlignedBoundingBox3D class, which relied on division by 0 to return infinity.
	* CHANGE:	Update the method reciprocal(Vector3F) in the Vector3F class. It would return 0.0F for non-finite numbers, but that caused a bug in the AxisAlignedBoundingBox3F class, which relied on division by 0 to return infinity.
	* CHANGE:	Update the method vector3FSetNormalize(float, float, float) in the AbstractGeometryKernel class to check if the vector is already normalized.

2021-12-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the AxisAlignedBoundingBox3DUnitTests and AxisAlignedBoundingBox3FUnitTests classes.
	* ADD:		Add the BoundingSphere3DReaderUnitTests, BoundingSphere3FReaderUnitTests, InfiniteBoundingVolume3DReaderUnitTests and InfiniteBoundingVolume3FReaderUnitTests classes.
	* ADD:		Update the StringsUnitTests class.
	* ADD:		Add the methods toNonScientificNotationJava(double) and toNonScientificNotationJava(float) to the Strings class.
	* ADD:		Add a null check to the method read(DataInput, int) in the AxisAlignedBoundingBox3DReader, AxisAlignedBoundingBox3FReader, BoundingSphere3DReader, BoundingSphere3FReader, DefaultBoundingVolume3DReader, DefaultBoundingVolume3FReader, InfiniteBoundingVolume3DReader and InfiniteBoundingVolume3FReader classes.
	* ADD:		Add unit tests to the BoundingSphere3DUnitTests class.
	* ADD:		Add unit tests to the BoundingSphere3FUnitTests class.
	* CHANGE:	Update unit tests in the Ray2DUnitTests, Ray2FUnitTests, Ray3DUnitTests and Ray3FUnitTests classes.
	* CHANGE:	Fix a bug in the method getClosestPointTo(Point3D) in the BoundingSphere3D class. It should return the Point3D supplied as a parameter if it is the closest point.
	* CHANGE:	Fix a bug in the method getClosestPointTo(Point3F) in the BoundingSphere3F class. It should return the Point3F supplied as a parameter if it is the closest point.
	* CHANGE:	Update the toString() method of the BoundingSphere3D, BoundingSphere3F, Color3D, Color3F, Color4D, Color4F, Matrix33D, Matrix33F, Matrix44D, Matrix44F, Point2D, Point2F, Point3D, Point3F, Point4D, Point4F, Vector2D, Vector2F, Vector3D, Vector3F, Vector4D and Vector4F classes.

2021-12-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getMidpoint() to the InfiniteBoundingVolume3D and InfiniteBoundingVolume3F classes.
	* ADD:		Add the BoundingSphere3DUnitTests, BoundingSphere3FUnitTests, InfiniteBoundingVolume3DUnitTests and InfiniteBoundingVolume3FUnitTests classes.
	* ADD:		Add the AbstractLDRImageModifier class.
	* CHANGE:	Update the return type of the method transform(Matrix44D) in the InfiniteBoundingVolume3D class from BoundingVolume3D to InfiniteBoundingVolume3D.
	* CHANGE:	Update the return type of the method transform(Matrix44F) in the InfiniteBoundingVolume3F class from BoundingVolume3F to InfiniteBoundingVolume3F.
	* CHANGE:	Update the CompiledModifierCache, CompiledSceneModifier, AbstractModifierKernel and AbstractSceneKernel classes to reflect the new name of NormalMapLDRImageModifier.
	* CHANGE:	Update the IDs for the NoOpModifier, NormalMapLDRImageModifier, SimplexNoiseNormalMapModifier and SteepParallaxMapLDRImageModifier classes.
	* CHANGE:	Rename the class LDRImageNormalMapModifier to NormalMapLDRImageModifier and change it such that it extends AbstractLDRImageModifier rather than implements Modifier.
	* CHANGE:	Rename the class LDRImageSteepParallaxMapModifier to SteepParallaxMapLDRImageModifier and change it such that it extends AbstractLDRImageModifier rather than implements Modifier.
	* REMOVE:	Remove the methods load(File), load(File, AngleF), load(File, AngleF, Vector2F), load(String), load(String, AngleF), load(String, AngleF, Vector2F), redoGammaCorrectionSRGB(LDRImageNormalMapModifier) and undoGammaCorrectionSRGB(LDRImageNormalMapModifier) from the LDRImageNormalMapModifier class. These operations can be performed by the Image API.
	* REMOVE:	Remove the methods load(File), load(File, AngleF), load(File, AngleF, Vector2F), load(String), load(String, AngleF), load(String, AngleF, Vector2F), redoGammaCorrectionSRGB(LDRImageSteepParallaxMapModifier) and undoGammaCorrectionSRGB(LDRImageSteepParallaxMapModifier) from the LDRImageSteepParallaxMapModifier class. These operations can be performed by the Image API.

2021-12-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods calculateBitangent() and calculateTangent() to the Triangle3D and Triangle3F classes.
	* ADD:		Add support for Modifiers to the Ray Caster in the CPU renderer.
	* ADD:		Add the LDRImageSteepParallaxMapModifier class.
	* ADD:		Add the method setTextureCoordinates(Point2F) to the Intersection class.
	* ADD:		Add unit tests to the Vector4DUnitTests class.
	* ADD:		Add unit tests to the Vector4FUnitTests class.
	* CHANGE:	Update the IDs for the NoOpModifier and SimplexNoiseNormalMapModifier classes.
	* CHANGE:	Update the methods divide(Vector4D, double) and normalize(Vector4D) in the Vector4D class.
	* CHANGE:	Update the methods divide(Vector4F, float) and normalize(Vector4F) in the Vector4F class.

2021-12-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a NodeHierarchicalVisitorMock class that implements NodeHierarchicalVisitor to traverse Nodes in different paths or throw a RuntimeException.
	* ADD:		Add a NodeVisitorMock class that implements NodeVisitor to throw a RuntimeException.
	* ADD:		Add the Ray2DUnitTests, Ray2FUnitTests, Ray3DUnitTests and Ray3FUnitTests classes.
	* ADD:		Add unit tests to the Vector2IUnitTests class.
	* ADD:		Add unit tests to the Vector3DUnitTests class.
	* ADD:		Add unit tests to the Vector3FUnitTests class.

2021-12-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update Point4DUnitTests and Point4FUnitTests for full unit test coverage.
	* CHANGE:	Update Vector2DUnitTests and Vector2FUnitTests for full unit test coverage.

2021-12-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the WritableImageCacheUnitTests class.
	* ADD:		Add the method size() to the WritableImageCache class.
	* ADD:		Add unit tests to the Vector3DUnitTests class.
	* ADD:		Add unit tests to the Vector3FUnitTests class.
	* ADD:		Add the FloatUnaryOperatorUnitTests and TriFunctionUnitTests classes.
	* ADD:		Add the StringsUnitTests class.
	* ADD:		Add unit tests to the Vector2DUnitTests class.
	* ADD:		Add unit tests to the Vector2FUnitTests class.
	* ADD:		Add a DataOutputMock class that implements DataOutput to throw an IOException.
	* CHANGE:	Update ArrayComponentOrder and ArrayComponentOrderUnitTests for full unit test coverage.
	* CHANGE:	Fix a bug in FloatUnaryOperator. The method identity() was not static, which it should be.
	* CHANGE:	Update the testWrite() method in the Color3DUnitTests, Color3FUnitTests, Matrix33DUnitTests, Matrix33FUnitTests, Matrix44DUnitTests, Matrix44FUnitTests, Point2DUnitTests, Point2FUnitTests, Point2IUnitTests, Point3DUnitTests, Point3FUnitTests, Point4DUnitTests, Point4FUnitTests, Vector2DUnitTests and Vector2FUnitTests classes to use the DataOutputMock class.

2021-12-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method perpendicular(Vector2D) to the Vector2D class.
	* ADD:		Add the method perpendicular(Vector2F) to the Vector2F class.
	* ADD:		Add the method perpendicular(Vector2I) to the Vector2I class.
	* ADD:		Add the constants NEXT_DOWN_1_1, NEXT_DOWN_1_2, NEXT_DOWN_1_3, NEXT_UP_1_1, NEXT_UP_1_2 and NEXT_UP_1_3 to the Doubles and Floats classes.
	* ADD:		Add the methods nextDown(double) and nextUp(double) to the Doubles class.
	* ADD:		Add the methods nextDown(float) and nextUp(float) to the Floats class.
	* ADD:		Add the Vector2DUnitTests, Vector2FUnitTests, Vector2IUnitTests, Vector3DUnitTests, Vector3FUnitTests, Vector4DUnitTests and Vector4FUnitTests classes.
	* CHANGE:	Update the method orthogonal(Vector2D, Vector2D) in the Vector2D class.
	* CHANGE:	Update the method orthogonal(Vector2F, Vector2F) in the Vector2F class.
	* CHANGE:	Update the methods random() and randomNormalized() in the Vector2D, Vector2F, Vector3D and Vector3F classes. They now produce random component values between -1.0 and 1.0, instead of between 0.0 and 1.0.
	* CHANGE:	Update the methods isUnitVector() and normalize(Vector2D) in the Vector2D class.
	* CHANGE:	Update the methods isUnitVector() and normalize(Vector2F) in the Vector2F class.
	* CHANGE:	Update the methods isUnitVector() and normalize(Vector3D) in the Vector3D class.
	* CHANGE:	Update the methods isUnitVector() and normalize(Vector3F) in the Vector3F class.
	* CHANGE:	Update the toString() method of the Vector2D, Vector2F, Vector3D, Vector3F, Vector4D and Vector4F classes.
	* REMOVE:	Remove the methods nextDownPBRT(double) and nextUpPBRT(double) from the Doubles class. They are replaced with the methods nextDown(double) and nextUp(double).
	* REMOVE:	Remove the methods nextDownPBRT(float) and nextUpPBRT(float) from the Floats class. They are replaced with the methods nextDown(float) and nextUp(float).

2021-12-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the AngleDUnitTests and AngleFUnitTests classes.

2021-12-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Matrix44DUnitTests and Matrix44FUnitTests classes.
	* ADD:		Add unit tests to the Matrix33DUnitTests class.
	* ADD:		Add unit tests to the Matrix33FUnitTests class.
	* CHANGE:	Update the method normalize(Vector3D) in the Vector3D class.
	* CHANGE:	Update the method normalize(Vector3F) in the Vector3F class.
	* CHANGE:	Update the method rotate(Vector3D, Vector3D) in the Matrix44D class.
	* CHANGE:	Update the method rotate(Vector3F, Vector3F) in the Matrix44F class.
	* CHANGE:	Update the toString() method of the Matrix44D and Matrix44F classes.
	* CHANGE:	Fix a bug in the determinant() method of the Matrix33D class.
	* CHANGE:	Fix a bug in the determinant() method of the Matrix33F class.
	* REMOVE:	Remove the method setupPRNG() and the fields seedArray_$private$1 and setupPRNG from the AbstractKernel class. The PRNG that used private memory was slightly faster in some cases, but it did not work out as expected. Some artifacts were introduced.

2021-11-30  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Matrix33DUnitTests and Matrix33FUnitTests classes.
	* ADD:		Add unit tests to the Point3DUnitTests class.
	* ADD:		Add unit tests to the Point3FUnitTests class.
	* CHANGE:	Update the toString() method of the Matrix33D and Matrix33F classes.
	* CHANGE:	Fix a bug in the method centroid(Point3D, Point3D, Point3D, Point3D, Point3D, Point3D, Point3D, Point3D) in the Point3D class.
	* CHANGE:	Fix a bug in the method centroid(Point3F, Point3F, Point3F, Point3F, Point3F, Point3F, Point3F, Point3F) in the Point3F class.

2021-11-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Point2DUnitTests class.
	* ADD:		Add unit tests to the Point2FUnitTests class.
	* ADD:		Add unit tests to the Point2IUnitTests class.
	* ADD:		Add unit tests to the Point3DUnitTests class.
	* ADD:		Add unit tests to the Point3FUnitTests class.
	* ADD:		Add unit tests to the Point4DUnitTests class.
	* ADD:		Add unit tests to the Point4FUnitTests class.
	* CHANGE:	Update the toString() method of the Point3D, Point3F, Point4D and Point4F classes.

2021-11-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Point2DUnitTests class.
	* ADD:		Add unit tests to the Point2FUnitTests class.

2021-11-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Point2DUnitTests class.
	* ADD:		Add unit tests to the Point2FUnitTests class.

2021-11-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Point2DUnitTests, Point2FUnitTests, Point2IUnitTests, Point3DUnitTests, Point3FUnitTests, Point4DUnitTests and Point4FUnitTests classes.
	* ADD:		Add the ChromaticSpectralCurveDUnitTests, ChromaticSpectralCurveFUnitTests, Color4DUnitTests, ColorSpaceDUnitTests, ColorSpaceFUnitTests, ConstantSpectralCurveDUnitTests, ConstantSpectralCurveFUnitTests, IrregularSpectralCurveDUnitTests, IrregularSpectralCurveFUnitTests, RegularSpectralCurveDUnitTests and RegularSpectralCurveFUnitTests classes.
	* ADD:		Add the method equals(Color4D) to the Color4D class.
	* ADD:		Add the method equals(Color4F) to the Color4F class.
	* CHANGE:	Update the toString() method of the Point2D and Point2F classes.

2021-11-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a simple renderer implementation for the Ray Tracing option in the GPU-renderer.
	* CHANGE:	Perform some optimizations to the GPU-renderer, including the PRNG.
	* CHANGE:	Update the methods saturateF(float, float, float) and saturateI(int, int, int) in the AbstractKernel class. In the past, the two parameters at the end could be either minimum and maximum or maximum and minimum. Now they are assumed to be minimum and maximum.

2021-11-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method equals(Color3D) to the Color3D class.
	* ADD:		Add the method equals(Color3F) to the Color3F class.
	* ADD:		Add the method equals(BSDF) to the BSDF class.
	* ADD:		Add the field bXDFMatchArray_$private$8 to the AbstractMaterialKernel class. It stores the IDs for matching BXDFs, to simplify selection.
	* CHANGE:	Optimize the BSDF class.

2021-11-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods drawShape(Shape2I), drawShape(Shape2I, BiFunction<Color4D, Point2I, Color4D>), drawShape(Shape2I, Color3D), drawShape(Shape2I, Color4D), drawShapeComplement(Shape2I), drawShapeComplement(Shape2I, BiFunction<Color4D, Point2I, Color4D>), drawShapeComplement(Shape2I, Color3D), drawShapeComplement(Shape2I, Color4D), fillShape(Shape2I), fillShape(Shape2I, BiFunction<Color4D, Point2I, Color4D>), fillShape(Shape2I, Color3D), fillShape(Shape2I, Color4D), fillShapeComplement(Shape2I), fillShapeComplement(Shape2I, BiFunction<Color4D, Point2I, Color4D>), fillShapeComplement(Shape2I, Color3D) and fillShapeComplement(Shape2I, Color4D) to the ImageD class.
	* ADD:		Add the methods drawShape(Shape2I), drawShape(Shape2I, BiFunction<Color4F, Point2I, Color4F>), drawShape(Shape2I, Color3F), drawShape(Shape2I, Color4F), drawShapeComplement(Shape2I), drawShapeComplement(Shape2I, BiFunction<Color4F, Point2I, Color4F>), drawShapeComplement(Shape2I, Color3F), drawShapeComplement(Shape2I, Color4F), fillShape(Shape2I), fillShape(Shape2I, BiFunction<Color4F, Point2I, Color4F>), fillShape(Shape2I, Color3F), fillShape(Shape2I, Color4F), fillShapeComplement(Shape2I), fillShapeComplement(Shape2I, BiFunction<Color4F, Point2I, Color4F>), fillShapeComplement(Shape2I, Color3F) and fillShapeComplement(Shape2I, Color4F) to the ImageF class.
	* ADD:		Add the methods contains(Point2I, boolean) and findPoints(boolean) to the Circle2I class.
	* ADD:		Add the methods contains(Point2I, boolean) and findPoints(boolean) to the LineSegment2I class.
	* ADD:		Add the methods contains(Point2I, boolean) and findPoints(boolean) to the Polygon2I class.
	* ADD:		Add the methods contains(Point2I, boolean) and findPoints(boolean) to the Rectangle2I class.
	* ADD:		Add the methods contains(Point2I, boolean), findPoints(), getLineSegments() and getRectangle() to the Triangle2I class.
	* ADD:		Add the methods contains(Point2I, boolean), findPoints(), findPoints(boolean), findPointsOfComplement(Shape2I), findPointsOfComplement(Shape2I, boolean), findPointsOfIntersection(Shape2I) and findPointsOfIntersection(Shape2I, boolean) to the Shape2I interface.
	* REMOVE:	Remove the methods drawCircle(...), drawCircleComplement(...), drawLineSegment(...), drawPolygon(...), drawRectangle(...), drawTriangle(...), fillCircle(...), fillCircleComplement(...), fillPolygon(...), fillRectangle(...) and fillTriangle(...) from the ImageD and ImageF classes.
	* REMOVE:	Remove the methods contains(Point2I), findPointsOfComplement(), findPointsOfComplement(Rectangle2I), findPointsOfComplement(Rectangle2I, boolean), findPointsOfIntersection(), findPointsOfIntersection(Rectangle2I) and findPointsOfIntersection(Rectangle2I, boolean) from the Circle2I class.
	* REMOVE:	Remove the method contains(Point2I) from the LineSegment2I class.
	* REMOVE:	Remove the methods contains(Point2I), findPointsOfIntersection(Rectangle2I) and findPointsOfIntersection(Rectangle2I, boolean) from the Polygon2I class.
	* REMOVE:	Remove the method contains(Point2I) from the Rectangle2I class.
	* REMOVE:	Remove the method contains(Point2I) from the Triangle2I class.

2021-11-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method toneMap(double) to the ImageD class.
	* ADD:		Add the method toneMap(float) to the ImageF class.

2021-11-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the intersection methods in the GPU renderer. Instead of one set of methods, two exists, such that information about intersected AreaLight instances can be stored.
	* CHANGE:	Fix a bug in the SubstrateMaterial implementation in the GPU renderer.

2021-11-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getTurbidity() to the PerezLight class.
	* ADD:		Add the methods color3FLHSSetConvertXYZToRGB(float, float, float) and color3FRHSSetConvertXYZToRGB(float, float, float) to the AbstractImageKernel class.
	* ADD:		Add the method ray3FCameraGenerateTriangleFilter() to the AbstractSceneKernel class.
	* ADD:		Add the methods redoGammaCorrection(), redoGammaCorrection(ColorSpaceD), undoGammaCorrection() and undoGammaCorrection(ColorSpaceD) to the ImageD class.
	* ADD:		Add the methods redoGammaCorrection(), redoGammaCorrection(ColorSpaceF), undoGammaCorrection() and undoGammaCorrection(ColorSpaceF) to the ImageF class.
	* ADD:		Add the method getDefault() to the ColorSpaceD and ColorSpaceF classes.
	* CHANGE:	Optimize the memory requirement for the PerezLight in the GPU renderer.
	* CHANGE:	Fix a bug in the method color3FRHSSetBlend(float, float, float) in the AbstractImageKernel class.
	* CHANGE:	Update the Path Tracer in the GPURenderer class to use the method ray3FCameraGenerateTriangleFilter(). This produces less ringing.
	* CHANGE:	Update the implementation of the PerezLight in the AbstractLightKernel class.
	* CHANGE:	Rename the methods imageRedoGammaCorrectionPBRT() and imageUndoGammaCorrectionPBRT() to imageRedoGammaCorrection() and imageUndoGammaCorrection() in the AbstractImageKernel class and update their implementations.
	* REMOVE:	Remove the methods redoGammaCorrectionPBRT(), redoGammaCorrectionSRGB(), undoGammaCorrectionPBRT() and undoGammaCorrectionSRGB() from the ImageD class.
	* REMOVE:	Remove the methods redoGammaCorrectionPBRT(), redoGammaCorrectionSRGB(), undoGammaCorrectionPBRT() and undoGammaCorrectionSRGB() from the ImageF class.
	* REMOVE:	Remove the methods convertRGBToXYZUsingPBRT(Color3D), convertRGBToXYZUsingSRGB(Color3D), convertXYZToRGBUsingPBRT(Color3D), convertXYZToRGBUsingSRGB(Color3D), redoGammaCorrectionPBRT(Color3D), redoGammaCorrectionSRGB(Color3D), undoGammaCorrectionPBRT(Color3D) and undoGammaCorrectionSRGB(Color3D) from the Color3D class.
	* REMOVE:	Remove the methods convertRGBToXYZUsingPBRT(Color3F), convertRGBToXYZUsingSRGB(Color3F), convertXYZToRGBUsingPBRT(Color3F), convertXYZToRGBUsingSRGB(Color3F), redoGammaCorrectionPBRT(Color3F), redoGammaCorrectionSRGB(Color3F), undoGammaCorrectionPBRT(Color3F) and undoGammaCorrectionSRGB(Color3F) from the Color3F class.
	* REMOVE:	Remove the methods convertRGBAToXYZAUsingPBRT(Color4D), convertRGBAToXYZAUsingSRGB(Color4D), convertXYZAToRGBAUsingPBRT(Color4D), convertXYZAToRGBAUsingSRGB(Color4D), redoGammaCorrectionPBRT(Color4D), redoGammaCorrectionSRGB(Color4D), undoGammaCorrectionPBRT(Color4D) and undoGammaCorrectionSRGB(Color4D) from the Color4D class.
	* REMOVE:	Remove the methods convertRGBAToXYZAUsingPBRT(Color4F), convertRGBAToXYZAUsingSRGB(Color4F), convertXYZAToRGBAUsingPBRT(Color4F), convertXYZAToRGBAUsingSRGB(Color4F), redoGammaCorrectionPBRT(Color4F), redoGammaCorrectionSRGB(Color4F), undoGammaCorrectionPBRT(Color4F) and undoGammaCorrectionSRGB(Color4F) from the Color4F class.

2021-11-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Color3DUnitTests class.
	* ADD:		Add unit tests to the Color3FUnitTests class.
	* CHANGE:	Update the gamma correction in ColorSpaceD and ColorSpaceF to account for values outside the range [0.0, 1.0]. The results will then be similar to the PBRT version.
	* CHANGE:	Change the maximum decimal places for the method toNonScientificNotation(double) in the Strings class from 8 to 16. The method toNonScientificNotation(float) is still using 8 as before.

2021-11-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods toColorRGB(boolean) and toColorXYZ(boolean) to the SpectralCurveD and SpectralCurveF classes.
	* ADD:		Add unit tests to the ArrayComponentOrderUnitTests class.
	* CHANGE:	Update the PerezLight class to use the legacy version of SpectralCurveF.toColorXYZ(boolean).
	* CHANGE:	Update the ChromaticSpectralCurveD and ChromaticSpectralCurveF classes to use the legacy versions of toColorXYZ(boolean).

2021-11-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the ArrayComponentOrderUnitTests class.

2021-11-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Color3DUnitTests class.
	* ADD:		Add unit tests to the Color3FUnitTests class.

2021-11-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Color4FUnitTests class.
	* ADD:		Add the PackedIntComponentOrderUnitTests class.
	* CHANGE:	Update the toString() method of the Color4D and Color4F classes.

2021-11-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Color3DUnitTests class.
	* ADD:		Add unit tests to the Color3FUnitTests class.

2021-11-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Color3DUnitTests class.
	* ADD:		Add unit tests to the Color3FUnitTests class.

2021-11-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the ArrayComponentOrderUnitTests class.
	* ADD:		Add unit tests to the Color3FUnitTests class.
	* CHANGE:	Fix a bug in the method readRAsInt(byte[], int) of the ArrayComponentOrder enum. It returned a byte and not an int.

2021-11-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add unit tests to the Color3FUnitTests class.

2021-10-31  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the default Filter2D class used in PixelImageD from MitchellFilter2D to GaussianFilter2D. MitchellFilter2D creates negative filter weights whereas GaussianFilter2D does not.
	* CHANGE:	Update the default Filter2F class used in PixelImageF from MitchellFilter2F to GaussianFilter2F. MitchellFilter2F creates negative filter weights whereas GaussianFilter2F does not.
	* CHANGE:	Fix a bug in AbstractCPURenderer.

2021-10-30  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Color3FUnitTests class.
	* CHANGE:	Fix bugs in the isCyan(), isMagenta() and isYellow() methods of the Color3D, Color3F, Color4D and Color4F classes.
	* CHANGE:	Update the toString() method of the Color3D and Color3F classes.
	* CHANGE:	Update the ChangeCombinerUnitTests, ChangeHistoryUnitTests and ChangeUnitTests classes.

2021-10-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Point class in the Simplex API.

2021-10-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Vector class in the Simplex API.
	* CHANGE:	Update Javadocs for the ChangeCombiner class in the Change API.
	* CHANGE:	Update Javadocs for the ArrayComponentOrder enum, the Color3D, Color3F, ColorSpace3D and ColorSpace3F classes in the Color API.
	* CHANGE:	Update Javadocs for the Matrix, OrthonormalBasis, Point and Vector classes in the Simplex API.

2021-10-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Vector class in the Simplex API.

2021-10-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Texture class in the Simplex API.

2021-10-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Color class in the Simplex API.

2021-10-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the ChangeCombinerUnitTests, ChangeHistoryUnitTests and ChangeUnitTests classes.
	* REMOVE:	Remove the ChangeAPIUnitTests class.

2021-10-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add new tests to the ChangeAPIUnitTests class.

2021-10-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix Javadoc errors in the Renderer, AbstractCPURenderer, AbstractGPURenderer, AbstractModifierKernel, CompiledTextureCache and Color.

2021-10-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the constructor ConstructiveSolidGeometry3D(Operation, Shape3D, Shape3D, Matrix44D, Matrix44D) to the ConstructiveSolidGeometry3D class.
	* ADD:		Add the constructor ConstructiveSolidGeometry3F(Operation, Shape3F, Shape3F, Matrix44F, Matrix44F) to the ConstructiveSolidGeometry3F class.

2021-10-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Unit Tests for the Change API to the ChangeAPIUnitTests class in the Test API.

2021-10-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method materialBSDFResultBXDFHasTransmission() to the AbstractMaterialKernel class.
	* CHANGE:	Update the way transmissive materials are handled for the Path Tracer in the GPURenderer class.

2021-10-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method render(int) to the AbstractCPURenderer and AbstractGPURenderer classes.
	* ADD:		Add the method render(int) to the Renderer interface.

2021-10-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods rotateX(double), rotateX(double, boolean), rotateY(double), rotateY(double, boolean), rotateZ(double) and rotateZ(double, boolean) to the Matrix44D class.
	* ADD:		Add the methods rotateX(float), rotateX(float, boolean), rotateY(float), rotateY(float, boolean), rotateZ(float) and rotateZ(float, boolean) to the Matrix44F class.

2021-10-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods setObjectToWorld(Matrix44F) and setWorldToObject(Matrix44F) to the Transform class.

2021-10-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods luminanceMaximum() and luminanceMinimum() to the ImageD class.
	* ADD:		Add the methods luminanceMaximum() and luminanceMinimum() to the ImageF class.
	* ADD:		Add the method maxOrNaN(double, double) to the Doubles class.
	* ADD:		Add the method maxOrNaN(float, float) to the Floats class.

2021-10-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for Polygon3F to the GPU-renderer.
	* ADD:		Add the method checkIsNearlyEqual(float, float) to the AbstractKernel class.
	* ADD:		Add the methods shape2FLine2FContains(float, float, float, float, float, float), shape3FPolygon3FIntersectionCompute(float, int, int), shape3FPolygon3FIntersectionT(int, float, float) and shape3FPolygon3FIntersects(int, float, float) to the AbstractGeometryKernel class.
	* ADD:		Add the field shape3FPolygon3FArray to the AbstractGeometryKernel class.
	* CHANGE:	Refactor the classes Curves3D and Curves3F into the more general CompoundShape3D and CompoundShape3F classes.
	* CHANGE:	Refactor the classes Curves3DReader and Curves3FReader into the CompoundShape3DReader and CompoundShape3FReader classes.
	* CHANGE:	Change the IDs for Cone3D, Cone3F, ConstructiveSolidGeometry3D, ConstructiveSolidGeometry3F, Curve3D and Curve3F.
	* CHANGE:	Rename the constant POLYGON_3_F_OFFSET_POINT_3_F_2 to POLYGON_3_F_OFFSET_POINT_3_F_N in the CompiledShape3FCache class.

2021-10-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getPoint(int) and getPointCount() to the Polygon2D class.
	* ADD:		Add the methods getPoint(int) and getPointCount() to the Polygon2F class.
	* ADD:		Add the methods getPoint(int), getPointCount(), getProjectedPolygon() and getSurfaceNormal() to the Polygon3D class.
	* ADD:		Add the methods getPoint(int), getPointCount(), getProjectedPolygon() and getSurfaceNormal() to the Polygon3F class.
	* ADD:		Add the constants POLYGON_3_F_OFFSET_POINT_2_F_COUNT, POLYGON_3_F_OFFSET_POINT_2_F, POLYGON_3_F_OFFSET_POINT_3_F_0, POLYGON_3_F_OFFSET_POINT_3_F_1, POLYGON_3_F_OFFSET_POINT_3_F_2 and POLYGON_3_F_OFFSET_SURFACE_NORMAL to the CompiledShape3FCache class.
	* ADD:		Add the methods addPolygon3F(float[]), getPolygon3FCount(), getPolygon3FLength(Polygon3F), getPolygon3FOffsetAbsolute(float[]), getPolygon3FOffsetRelative(float[]), getPolygon3FOffsets(), getPolygon3Fs(), removePolygon3F(float[]), setPolygon3FOffsets(int[]), setPolygon3Fs(float[]), toPolygon3F(Polygon3F), toPolygon3FOffsets(List<Polygon3F>) and toPolygon3Fs(List<Polygon3F>) to the CompiledShape3FCache class.

2021-09-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the BiModifier class.
	* CHANGE:	Change the IDs of the LDRImageNormalMapModifier, NoOpModifier and SimplexNoiseNormalMapModifier classes.

2021-09-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Simplex API.

2021-09-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-09-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-09-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-09-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-09-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-09-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-09-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-09-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods isAxisAligned() and isRotated() to the Rectangle2D class.
	* ADD:		Add the methods isAxisAligned() and isRotated() to the Rectangle2F class.

2021-09-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods intersectionSetOrthonormalBasisSW(float, float, float) and intersectionSetOrthonormalBasisSWTransform(float, float, float) to the AbstractGeometryKernel class.
	* ADD:		Add the AbstractModifierKernel class.
	* ADD:		Add the method getCompiledModifierCache() to the CompiledScene class.
	* ADD:		Add the CompiledModifierCache class.
	* ADD:		Add the constant ID to the LDRImageNormalMapModifier, NoOpModifier and SimplexNoiseNormalMapModifier classes.
	* ADD:		Add the method getID() to the Modifier interface and the LDRImageNormalMapModifier, NoOpModifier and SimplexNoiseNormalMapModifier classes.
	* ADD:		Add support for DotProductTexture to the GPU-renderer.
	* CHANGE:	Change the extended class for AbstractTextureKernel from AbstractGeometryKernel to AbstractModifierKernel.
	* CHANGE:	Change the signature of the methods to*Material(*Material, ToIntFunction<Texture>) and to*Materials(List<*Material>, ToIntFunction<Texture>) in the CompiledMaterialCache class to to*Material(*Material, ToIntFunction<Modifier>, ToIntFunction<Texture>) and to*Materials(List<*Material>, ToIntFunction<Modifier>, ToIntFunction<Texture>), respectively.
	* CHANGE:	Change the structure for some compiled Material instances, in order to make room for their associated Modifier instances. Some constants were refactored.

2021-09-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getNormal() to the Triangle3D.Vertex3D class.
	* ADD:		Add the method getNormal() to the Triangle3F.Vertex3F class.
	* REMOVE:	Remove the method getOrthonormalBasis() from the Triangle3D.Vertex3D class.
	* REMOVE:	Remove the method getOrthonormalBasis() from the Triangle3F.Vertex3F class.
	* REMOVE:	Remove the constructors Vertex3D(Point2D, Point4D, OrthonormalBasis33D) and Vertex3D(Point2D, Point4D, Vector3D, Vector3D) from the Triangle3D.Vertex3D class.
	* REMOVE:	Remove the constructors Vertex3F(Point2F, Point4F, OrthonormalBasis33F) and Vertex3F(Point2F, Point4F, Vector3F, Vector3F) from the Triangle3F.Vertex3F class.

2021-09-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods readGeo(File) and readGeo(String) to the TriangleMesh3D class.
	* ADD:		Add the methods readGeo(File) and readGeo(String) to the TriangleMesh3F class.
	* ADD:		Add the methods getLineSegments() and getRectangle() to the Polygon2D class.
	* ADD:		Add the methods getLineSegments() and getRectangle() to the Polygon2F class.
	* ADD:		Add the method getRectangle() to the Polygon2I class.
	* ADD:		Add the method getLineSegments() to the Rectangle2D class.
	* ADD:		Add the method getLineSegments() to the Rectangle2F class.
	* ADD:		Add the method hadamardProduct(Vector3D, Vector3D) to the Vector3D class.
	* ADD:		Add the method hadamardProduct(Vector3F, Vector3F) to the Vector3F class.
	* CHANGE:	Update the Simplex API.
	* CHANGE:	Update the methods contains(Point2D), getHeight() and getWidth() of the Rectangle2D class.
	* CHANGE:	Update the methods contains(Point2F), getHeight() and getWidth() of the Rectangle2F class.
	* CHANGE:	Update the methods contains(Point2I), getHeight() and getWidth() of the Rectangle2I class.

2021-09-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the constructor Vector2D(Point3D) to the Vector2D class.
	* ADD:		Add the constructor Vector2F(Point3F) to the Vector2F class.
	* ADD:		Add the methods scale(Point3D, Vector2D), scale(Point3D, Vector3D) and sphericalPhi() to the Point3D class.
	* ADD:		Add the methods scale(Point3F, Vector2F), scale(Point3F, Vector3F) and sphericalPhi() to the Point3F class.
	* CHANGE:	Update the Simplex API.

2021-09-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the DotProductTexture class.
	* CHANGE:	Change the IDs of the FunctionTexture, LDRImageTexture, MarbleTexture, PolkaDotTexture, SimplexFractionalBrownianMotionTexture, SurfaceNormalTexture and UVTexture classes.

2021-08-31  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-08-30  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-08-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-08-28  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-08-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Update the Simplex API.

2021-08-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add methods to compute the orthonormal basis, surface normal and texture coordinates for a Cone3D data structure in the Shape class in the Simplex API.
	* ADD:		Add Javadocs to the Shape class in the Simplex API.
	* CHANGE:	Add ID and size parameters to the Cone3D, Cylinder3D and Disk3D data structures in the Shape class in the Simplex API.

2021-08-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods crossProduct(Vector2D, Vector2D), directionXY(Point3D), directionYZ(Point3D) and directionZY(Point3D) to the Vector2D class.
	* ADD:		Add the methods crossProduct(Vector2F, Vector2F), directionXY(Point3F), directionYZ(Point3F) and directionZY(Point3F) to the Vector2F class.
	* ADD:		Add the method contains(Point3D) to the Polygon3D class.
	* ADD:		Add the method contains(Point3F) to the Polygon3F class.
	* CHANGE:	Add an implementation for intersection(Ray3D, double, double) and intersectionT(Ray3D, double, double) to the Polygon3D class.
	* CHANGE:	Add an implementation for intersection(Ray3F, float, float) and intersectionT(Ray3F, float, float) to the Polygon3F class.
	* CHANGE:	Optimize Polygon2D and Polygon2F.
	* CHANGE:	Refactor the classes Rectangle3D and Rectangle3F.
	* CHANGE:	Update the classes Rectangle3DReader and Rectangle3FReader.

2021-08-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Image class in the Simplex API.

2021-08-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method contains(Point3D) to the Plane3D, ProceduralTerrain3D, RectangularCuboid3D, Sphere3D and Triangle3D classes.
	* ADD:		Add the method contains(Point3F) to the Plane3F, ProceduralTerrain3F, RectangularCuboid3F, Sphere3F and Triangle3F classes.
	* CHANGE:	Fix the method contains(Point3D) in the BoundingSphere3D class.
	* CHANGE:	Fix the method contains(Point3F) in the BoundingSphere3F class.

2021-08-21  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a new accordion with primitive properties below the scene tree view in the application. It contains nothing at this point.
	* ADD:		Add the methods createScreenCapture(Rectangle2I), difference(ImageD, ImageD), load(File), load(String) and load(URL) to the DoubleImageD class.
	* ADD:		Add the methods createScreenCapture(Rectangle2I), difference(ImageF, ImageF), load(File), load(String) and load(URL) to the FloatImageF class.
	* ADD:		Add the constructor DoubleImageD(BufferedImage) to the DoubleImageD class.
	* ADD:		Add the constructor FloatImageF(BufferedImage) to the FloatImageF class.
	* CHANGE:	Update the menu bar in the application. The "Renderer" menu and its "GPU" checkbox are gone. Both the "New" and "Open" menu items are now menus with "CPU Renderer" and "GPU Renderer" as menu items. The "Save" and "Save As..." menu items are called "Save Image" and "Save Image As...", respectively.
	* REMOVE:	Remove the method getSurfaceAreaSquared() from the Triangle3D and Triangle3F classes.

2021-08-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the constructors FileRendererObserver(File, boolean, boolean, boolean, int) and FileRendererObserver(String, boolean, boolean, boolean, int) to the FileRendererObserver class.
	* REMOVE:	Remove the parameter argument renderPasses from the methods onRenderPassComplete(Renderer, int, int, long) and onRenderPassProgress(Renderer, int, int, long) in the FileRendererObserver class.
	* REMOVE:	Remove the parameter argument renderPasses from the methods onRenderPassComplete(Renderer, int, int, long) and onRenderPassProgress(Renderer, int, int, long) in the NoOpRendererObserver class.
	* REMOVE:	Remove the parameter argument renderPasses from the methods onRenderPassComplete(Renderer, int, int, long) and onRenderPassProgress(Renderer, int, int, long) in the RendererObserver interface.
	* REMOVE:	Remove the methods getRenderPasses(), getRenderPassesPerDisplayUpdate(), setRenderPass(int), setRenderPasses(int), setRenderPassesPerDisplayUpdate(int) and setTimer(Timer) from the AbstractCPURenderer class.
	* REMOVE:	Remove the methods getRenderPasses(), getRenderPassesPerDisplayUpdate(), setRenderPass(int), setRenderPasses(int), setRenderPassesPerDisplayUpdate(int) and setTimer(Timer) from the AbstractGPURenderer class.
	* REMOVE:	Remove the methods getRenderPasses(), getRenderPassesPerDisplayUpdate(), setRenderPass(int), setRenderPasses(int), setRenderPassesPerDisplayUpdate(int) and setTimer(Timer) from the ProgressiveImageOrderRenderer interface.

2021-08-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add methods to the Color class in the Simplex API.
	* CHANGE:	Refactor the Image class in the Simplex API.

2021-08-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for reading Polygon3D and Polygon3F to the DefaultShape3DReader and DefaultShape3FReader classes, respectively.
	* ADD:		Add the Polygon3DReader and Polygon3FReader classes.
	* ADD:		Add the methods createScreenCapture(Rectangle2I), difference(ImageD, ImageD), load(File), load(String) and load(URL) to the ByteImageD class.
	* ADD:		Add the methods createScreenCapture(Rectangle2I), difference(ImageF, ImageF), load(File), load(String) and load(URL) to the ByteImageF class.
	* ADD:		Add the constructor ByteImageD(BufferedImage) to the ByteImageD class.
	* ADD:		Add the constructor ByteImageF(BufferedImage) to the ByteImageF class.
	* ADD:		Add the method merge(int[]...) to the IntArrays class.
	* ADD:		Add the LongArrays class.
	* ADD:		Add the LongArrayOutputStream class.
	* REMOVE:	Remove the methods array(int), array(int, LongSupplier) and array(int, long) from the Longs class.

2021-08-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method convert(byte[]) to the IntArrays class.
	* ADD:		Add the method toNonScientificNotation(double) to the Strings class.
	* CHANGE:	Change the method names of toArray(List<T>, Function<T, float[]>) and toArray(List<T>, Function<T, float[]>, int) in the FloatArrays class to convert(List<T>, Function<T, float[]>) and convert(List<T>, Function<T, float[]>, int).
	* CHANGE:	Change the method names of array(int), array(int, FloatSupplier), array(int, float) and array(int, float, float, float, float) in the FloatArrays class to create(int), create(int, FloatSupplier), create(int, float) and create(int, float, float, float, float).
	* CHANGE:	Change the method name of array(float[]...) in the FloatArrays class to merge(float[]...).
	* CHANGE:	Move the methods array(float[]...), array(int), array(int, FloatSupplier), array(int, float), array(int, float, float, float, float), toArray(List<T>, Function<T, float[]>) and toArray(List<T>, Function<T, float[]>, int) from the Floats class to the FloatArrays class.
	* CHANGE:	Change the method names of toArray(List<T>, Function<T, double[]>) and toArray(List<T>, Function<T, double[]>, int) in the DoubleArrays class to convert(List<T>, Function<T, double[]>) and convert(List<T>, Function<T, double[]>, int).
	* CHANGE:	Change the method names of array(int), array(int, DoubleSupplier), array(int, double) and array(int, double, double, double, double) in the DoubleArrays class to create(int), create(int, DoubleSupplier), create(int, double) and create(int, double, double, double, double).
	* CHANGE:	Change the method name of array(double[]...) in the DoubleArrays class to merge(double[]...).
	* CHANGE:	Move the methods array(double[]...), array(int), array(int, DoubleSupplier), array(int, double), array(int, double, double, double, double), toArray(List<T>, Function<T, double[]>) and toArray(List<T>, Function<T, double[]>, int) from the Doubles class to the DoubleArrays class.
	* CHANGE:	Change the method names of toArray(List<T>, Function<T, int[]>), toArray(List<T>, Function<T, int[]>, int) and toArray(byte[], boolean) in the IntArrays class to convert(List<T>, Function<T, int[]>), convert(List<T>, Function<T, int[]>, int) and convert(byte[], boolean).
	* CHANGE:	Change the method names of array(int), array(int, IntSupplier) and array(int, int) in the IntArrays class to create(int), create(int, IntSupplier) and create(int, int).
	* CHANGE:	Move the methods array(int), array(int, IntSupplier), array(int, int), toArray(List<T>, Function<T, int[]>), toArray(List<T>, Function<T, int[]>, int) and toArray(byte[], boolean) from the Ints class to the IntArrays class.
	* CHANGE:	Change the method name of toArray(int[]) in the ByteArrays class to convert(int[]).
	* CHANGE:	Change the method names of array(int), array(int, byte) and array(int, byte, byte, byte, byte) in the ByteArrays class to create(int), create(int, byte) and create(int, byte, byte, byte, byte).
	* CHANGE:	Move the methods array(int), array(int, byte), array(int, byte, byte, byte, byte) and toArray(int[]) from the Bytes class to the ByteArrays class.
	* CHANGE:	Move the class Strings from the Utility API to the Java Lang API.
	* REMOVE:	Remove the method equal(double[], double[], int, int, int) from the Doubles class.

2021-08-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add rectangle validation to the method rotate(Rectangle2D, AngleD) of the Rectangle2D class.
	* ADD:		Add rectangle validation to the method rotate(Rectangle2F, AngleF) of the Rectangle2F class.
	* ADD:		Add the constructor Point2D(Point2F) to the Point2D class.
	* ADD:		Add the constructor Point2F(Point2D) to the Point2F class.
	* ADD:		Add the methods isAxisAligned() and isRotated() to the Rectangle2I class.
	* ADD:		Add rectangle validation to the constructor Rectangle2D(Point2D, Point2D, Point2D, Point2D) of the Rectangle2D class.
	* ADD:		Add rectangle validation to the constructor Rectangle2F(Point2F, Point2F, Point2F, Point2F) of the Rectangle2F class.
	* ADD:		Add rectangle validation to the constructor Rectangle2I(Point2I, Point2I, Point2I, Point2I) of the Rectangle2I class.
	* ADD:		Add the methods distance(Point2I, Point2I) and distanceSquared(Point2I, Point2I) to the Point2I class.
	* ADD:		Add the method length() to the Vector2I class.

2021-08-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods containsDifference(Point2D, Shape2D, Shape2D), containsIntersection(Point2D, Shape2D, Shape2D) and containsUnion(Point2D, Shape2D, Shape2D) to the Shape2D interface.
	* ADD:		Add the methods containsDifference(Point2F, Shape2F, Shape2F), containsIntersection(Point2F, Shape2F, Shape2F) and containsUnion(Point2F, Shape2F, Shape2F) to the Shape2F interface.
	* ADD:		Add the methods containsDifference(Point2I, Shape2I, Shape2I), containsIntersection(Point2I, Shape2I, Shape2I) and containsUnion(Point2I, Shape2I, Shape2I) to the Shape2I interface.
	* ADD:		Add support for reading LineSegment3D and LineSegment3F to the DefaultShape3DReader and DefaultShape3FReader classes, respectively.
	* ADD:		Add the LineSegment3D, LineSegment3DReader, LineSegment3FReader and Polygon3D classes.
	* ADD:		Add the method contains(Point3F) to the LineSegment3F class.

2021-08-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods drawPolygon(Polygon2I), drawPolygon(Polygon2I, Color4D), drawPolygon(Polygon2I, BiFunction<Color4D, Point2I, Color4D>), fillPolygon(Polygon2I), fillPolygon(Polygon2I, Color4D) and fillPolygon(Polygon2I, BiFunction<Color4D, Point2I, Color4D>) to the ImageD class.
	* ADD:		Add the methods drawPolygon(Polygon2I), drawPolygon(Polygon2I, Color4F), drawPolygon(Polygon2I, BiFunction<Color4F, Point2I, Color4F>), fillPolygon(Polygon2I), fillPolygon(Polygon2I, Color4F) and fillPolygon(Polygon2I, BiFunction<Color4F, Point2I, Color4F>) to the ImageF class.
	* ADD:		Add support for reading Polygon2D, Polygon2F and Polygon2I to the DefaultShape2DReader, DefaultShape2FReader and DefaultShape2IReader classes, respectively.
	* ADD:		Add the Polygon2D and Polygon2DReader classes.
	* ADD:		Add the Polygon2F and Polygon2FReader classes.
	* ADD:		Add the Polygon2I and Polygon2IReader classes.
	* ADD:		Add the method toString(Point2D...) to the Point2D class.
	* ADD:		Add the method toString(Point2F...) to the Point2F class.
	* ADD:		Add the method toString(Point2I...) to the Point2I class.
	* ADD:		Add the method fromPoints(Point2D...) to the LineSegment2D class.
	* ADD:		Add the method fromPoints(Point2F...) to the LineSegment2F class.
	* ADD:		Add the method fromPoints(Point2I...) to the LineSegment2I class.
	* ADD:		Add the constants MAXIMUM and MINIMUM to the Point2I class.
	* ADD:		Add the methods maximum(), maximum(Point2I, Point2I, Point2I), minimum() and minimum(Point2I, Point2I, Point2I) to the Point2I class.
	* ADD:		Add the constants MAX_VALUE and MIN_VALUE to the Ints class.
	* ADD:		Add the methods max(int, int, int) and min(int, int, int) to the Ints class.
	* ADD:		Add the method fromPoints(Point2D...) to the Rectangle2D class.
	* ADD:		Add the method fromPoints(Point2F...) to the Rectangle2F class.
	* ADD:		Add the method fromPoints(Point2I...) to the Rectangle2I class.
	* ADD:		Add the classes ByteArrays and DoubleArrays.
	* ADD:		Add the methods indexOf(float, float[]) and merge(float[], float) to the FloatArrays class.
	* ADD:		Add the methods convert(ArrayComponentOrder, ArrayComponentOrder, double[]) and convert(ArrayComponentOrder, ArrayComponentOrder, float[]) to the ArrayComponentOrder enum.
	* ADD:		Add the methods readA(double[], int), readB(double[], int), readG(double[], int) and readR(double[], int) to the ArrayComponentOrder enum.
	* ADD:		Add the methods readA(float[], int), readB(float[], int), readG(float[], int) and readR(float[], int) to the ArrayComponentOrder enum.
	* ADD:		Add the methods readAAsInt(byte[], int), readBAsInt(byte[], int), readGAsInt(byte[], int) and readRAsInt(byte[], int) to the ArrayComponentOrder enum.
	* ADD:		Add the methods difference(ImageD, ImageD) and load(URL) to the IntImageD class.
	* ADD:		Add the methods difference(ImageF, ImageF) and load(URL) to the IntImageF class.
	* CHANGE:	Change ID for various Shape2D, Shape2F, Shape2I, Shape3D and Shape3F class implementations.
	* CHANGE:	Update the Javadocs for the method fromPoints(Point3D[]) in the AxisAlignedBoundingBox3D class. The IllegalArgumentException was missed.
	* CHANGE:	Update the Javadocs for the method fromPoints(Point3F[]) in the AxisAlignedBoundingBox3F class. The IllegalArgumentException was missed.
	* CHANGE:	Refactor the Simplex API.
	* CHANGE:	Change the return type of the methods readA(byte[], int), readB(byte[], int), readG(byte[], int) and readR(byte[], int) from int to byte in the ArrayComponentOrder enum.

2021-08-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods load(URL) and load(URL, Filter2D) to the PixelImageD class.
	* ADD:		Add the methods load(URL) and load(URL, Filter2F) to the PixelImageF class.
	* CHANGE:	Refactor the Simplex API.

2021-08-12  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for reading TriangleMesh3D and TriangleMesh3F to the DefaultShape3DReader and DefaultShape3FReader classes, respectively.
	* ADD:		Add the TriangleMesh3DReader and TriangleMesh3FReader classes.
	* ADD:		Add Javadocs to the Simplex API.
	* CHANGE:	Refactor the Simplex API.
	* CHANGE:	Change the method signatures drawLine(Line2I), drawLine(Line2I, Color4D) and drawLine(Line2I, BiFunction<Color4D, Point2I, Color4D>) in the class ImageD to drawLineSegment(LineSegment2I), drawLineSegment(LineSegment2I, Color4D) and drawLineSegment(LineSegment2I, BiFunction<Color4D, Point2I, Color4D>), respectively.
	* CHANGE:	Change the method signatures drawLine(Line2I), drawLine(Line2I, Color4F) and drawLine(Line2I, BiFunction<Color4F, Point2I, Color4F>) in the class ImageF to drawLineSegment(LineSegment2I), drawLineSegment(LineSegment2I, Color4F) and drawLineSegment(LineSegment2I, BiFunction<Color4F, Point2I, Color4F>), respectively.
	* CHANGE:	Change the method signature rasterize(Line2I, Rectangle2I) in the class Rasterizer2I to rasterize(LineSegment2I, Rectangle2I).
	* CHANGE:	Change the names of Line2D and Line2DReader to LineSegment2D and LineSegment2DReader, respectively.
	* CHANGE:	Change the names of Line2F and Line2FReader to LineSegment2F and LineSegment2FReader, respectively.
	* CHANGE:	Change the names of Line2I and Line2IReader to LineSegment2I and LineSegment2IReader, respectively.
	* CHANGE:	Change the name of Line3F to LineSegment3F.

2021-08-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method contains(Point2D) to the interface Shape2D and the classes Circle2D and Triangle2D.
	* ADD:		Add the method contains(Point2F) to the interface Shape2F and the classes Circle2F and Triangle2F.
	* ADD:		Add the method contains(Point2I) to the interface Shape2I and the classes Circle2I and Triangle2I.
	* ADD:		Add the method lengthSquared() to the Vector2I class.
	* ADD:		Add Javadocs to the Simplex API.

2021-08-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Simplex API.
	* CHANGE:	Refactor the Simplex API.

2021-08-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Simplex API.
	* CHANGE:	Refactor the Simplex API.

2021-08-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Javadocs to the Matrix, Point and Vector classes in the new Simplex API.
	* CHANGE:	Refactor the Point and Vector classes in the new Simplex API.

2021-08-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Simplex API.
	* ADD:		Add the constant NaN to the Doubles class.
	* ADD:		Add the constant NaN to the Floats class.
	* CHANGE:	Fix a message typo to an IllegalArgumentException in the Matrix44D class.

2021-08-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the classes Line3F and Polygon3F.
	* ADD:		Add the method fromPoints(Point3D...) to the AxisAlignedBoundingBox3D class.
	* ADD:		Add the method fromPoints(Point3F...) to the AxisAlignedBoundingBox3F class.
	* ADD:		Add the methods coplanar(Point3D...) and toString(Point3D...) to the Point3D class.
	* ADD:		Add the methods coplanar(Point3F...) and toString(Point3F...) to the Point3F class.
	* ADD:		Add the method tripleProduct(Vector3D, Vector3D, Vector3D) to the Vector3D class.
	* ADD:		Add the method tripleProduct(Vector3F, Vector3F, Vector3F) to the Vector3F class.

2021-08-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getLatitude(), getLongitude(), addDistanceKm(Point2D, double, double) and distanceKm(Point2D, Point2D) to the Point2D class.
	* ADD:		Add the methods getLatitude(), getLongitude(), addDistanceKm(Point2F, float, float) and distanceKm(Point2F, Point2F) to the Point2F class.

2021-07-27  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method splice(float[], int, int, float[], float[]) to the FloatArrays class.
	* ADD:		Add the method splice(int[], int, int, int[], int[]) to the IntArrays class.

2021-07-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method write(Document) to the CompiledBoundingVolume3FCache, CompiledMaterialCache, CompiledScene, CompiledShape3FCache and CompiledTextureCache classes.
	* ADD:		Add the Document class to the Utility API.
	* ADD:		Add the method repeat(String, int) to the Strings class.
	* ADD:		Add the CompiledSceneModifier class to the Scene Compiler API.
	* ADD:		Add the method isSupported(Primitive) to the CompiledPrimitiveCache class.
	* ADD:		Add the method isSupported(Shape3F) to the CompiledShape3FCache class.

2021-07-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method isSupported(BoundingVolume3F) to the CompiledBoundingVolume3FCache class.
	* ADD:		Add the method isSupported(Light) to the CompiledLightCache class.
	* ADD:		Add the method isSupported(Material) to the CompiledMaterialCache class.
	* ADD:		Add the method isSupported(Texture) to the CompiledTextureCache class.
	* ADD:		Add the method getInstanceID() to the Primitive class.
	* ADD:		Add the constants MATRIX_4_4_F_LENGTH, PRIMITIVE_OFFSET_AREA_LIGHT_ID_AND_OFFSET and PRIMITIVE_OFFSET_INSTANCE_ID to the CompiledPrimitiveCache class.
	* ADD:		Add the methods addPrimitive(int[], float[]), getMatrix44FCount(), getPrimitiveOffsetAbsolute(int[]), getPrimitiveOffsetRelative(int[]) and removePrimitive(int[]) to the CompiledPrimitiveCache class.
	* REMOVE:	Remove the constants PRIMITIVE_OFFSET_AREA_LIGHT_ID and PRIMITIVE_OFFSET_AREA_LIGHT_OFFSET from the CompiledPrimitiveCache class.

2021-07-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Add additional parameter validation to the method setCamera(float[]) in the CompiledCameraCache class.

2021-07-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the FloatArrays class to the Utility API.
	* ADD:		Add the IntArrays class to the Utility API.
	* ADD:		Add the methods updateAxisAlignedBoundingBox3F(float[], float[]) and updateBoundingSphere3F(float[], float[]) to the CompiledBoundingVolume3FCache class.
	* REMOVE:	Remove the method equal(float[], float[], int, int, int) from the Floats class.
	* REMOVE:	Remove the methods equal(int[], int[], int, int, int) and indexOf(int, int[]) from the Ints class.

2021-07-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the constructor Triangle3D(Point3D, Point3D, Point3D) to the Triangle3D class.
	* ADD:		Add the constructor Triangle3F(Point3F, Point3F, Point3F) to the Triangle3F class.
	* ADD:		Add the methods addCone3F(float[]) and removeCone3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addCylinder3F(float[]) and removeCylinder3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addDisk3F(float[]) and removeDisk3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addHyperboloid3F(float[]) and removeHyperboloid3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addParaboloid3F(float[]) and removeParaboloid3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addPlane3F(float[]) and removePlane3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addRectangle3F(float[]) and removeRectangle3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addRectangularCuboid3F(float[]) and removeRectangularCuboid3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addSphere3F(float[]) and removeSphere3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addTorus3F(float[]) and removeTorus3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addTriangle3F(float[]) and removeTriangle3F(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods addTriangleMesh3F(int[]) and removeTriangleMesh3F(int[]) to the CompiledShape3FCache class.
	* ADD:		Add the methods getTriangleMesh3FCount(), getTriangleMesh3FOffsetAbsolute(int[]), getTriangleMesh3FOffsetRelative(int[]), getTriangleMesh3FOffsets(), setTriangleMesh3FOffsets(int[]) and toTriangleMesh3FOffsets(List<TriangleMesh3F>) to the CompiledShape3FCache class.
	* ADD:		Add the methods addDisneyMaterial(int[]) and removeDisneyMaterial(int[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addGlassMaterial(int[]) and removeGlassMaterial(int[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addGlossyMaterial(int[]) and removeGlossyMaterial(int[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addMatteMaterial(int[]) and removeMatteMaterial(int[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addMetalMaterial(int[]) and removeMetalMaterial(int[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addMirrorMaterial(int[]) and removeMirrorMaterial(int[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addPlasticMaterial(int[]) and removePlasticMaterial(int[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addPolkaDotMaterial(float[]) and removePolkaDotMaterial(float[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addSubstrateMaterial(int[]) and removeSubstrateMaterial(int[]) to the CompiledMaterialCache class.
	* CHANGE:	Change the returned offset from absolute to relative in the methods addAxisAlignedBoundingBox3F(float[]) and addBoundingSphere3F(float[]) of the CompiledBoundingVolume3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getCone3FOffsetAbsolute(float[]), getCone3FOffsetRelative(float[]) and setCone3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getCylinder3FOffsetAbsolute(float[]), getCylinder3FOffsetRelative(float[]) and setCylinder3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getDisk3FOffsetAbsolute(float[]), getDisk3FOffsetRelative(float[]) and setDisk3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getHyperboloid3FOffsetAbsolute(float[]), getHyperboloid3FOffsetRelative(float[]) and setHyperboloid3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getParaboloid3FOffsetAbsolute(float[]), getParaboloid3FOffsetRelative(float[]) and setParaboloid3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getPlane3FOffsetAbsolute(float[]), getPlane3FOffsetRelative(float[]) and setPlane3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getRectangle3FOffsetAbsolute(float[]), getRectangle3FOffsetRelative(float[]) and setRectangle3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getRectangularCuboid3FOffsetAbsolute(float[]), getRectangularCuboid3FOffsetRelative(float[]) and setRectangularCuboid3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getSphere3FOffsetAbsolute(float[]), getSphere3FOffsetRelative(float[]) and setSphere3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getTorus3FOffsetAbsolute(float[]), getTorus3FOffsetRelative(float[]) and setTorus3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the methods getTriangle3FOffsetAbsolute(float[]), getTriangle3FOffsetRelative(float[]) and setTriangle3Fs(float[]) in the CompiledShape3FCache class.
	* CHANGE:	Add additional parameter validation to the method setTriangleMesh3Fs(int[]) in the CompiledShape3FCache class.

2021-07-21  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods addBullseyeMaterial(float[]) and removeBullseyeMaterial(float[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addCheckerboardMaterial(float[]) and removeCheckerboardMaterial(float[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods addClearCoatMaterial(int[]) and removeClearCoatMaterial(int[]) to the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getBullseyeMaterialOffsetAbsolute(float[]), getBullseyeMaterialOffsetRelative(float[]) and setBullseyeMaterials(float[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getCheckerboardMaterialOffsetAbsolute(float[]), getCheckerboardMaterialOffsetRelative(float[]) and setCheckerboardMaterials(float[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getClearCoatMaterialOffsetAbsolute(int[]), getClearCoatMaterialOffsetRelative(int[]) and setClearCoatMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getDisneyMaterialOffsetAbsolute(int[]), getDisneyMaterialOffsetRelative(int[]) and setDisneyMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getGlassMaterialOffsetAbsolute(int[]), getGlassMaterialOffsetRelative(int[]) and setGlassMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getGlossyMaterialOffsetAbsolute(int[]), getGlossyMaterialOffsetRelative(int[]) and setGlossyMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getMatteMaterialOffsetAbsolute(int[]), getMatteMaterialOffsetRelative(int[]) and setMatteMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getMetalMaterialOffsetAbsolute(int[]), getMetalMaterialOffsetRelative(int[]) and setMetalMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getMirrorMaterialOffsetAbsolute(int[]), getMirrorMaterialOffsetRelative(int[]) and setMirrorMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getPlasticMaterialOffsetAbsolute(int[]), getPlasticMaterialOffsetRelative(int[]) and setPlasticMaterials(int[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getPolkaDotMaterialOffsetAbsolute(float[]), getPolkaDotMaterialOffsetRelative(float[]) and setPolkaDotMaterials(float[]) in the CompiledMaterialCache class.
	* CHANGE:	Add additional parameter validation to the methods getSubstrateMaterialOffsetAbsolute(int[]), getSubstrateMaterialOffsetRelative(int[]) and setSubstrateMaterials(int[]) in the CompiledMaterialCache class.

2021-07-20  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods addCheckerboardTexture(float[]) and removeCheckerboardTexture(float[]) to the CompiledTextureCache class.
	* ADD:		Add the methods addConstantTexture(float[]) and removeConstantTexture(float[]) to the CompiledTextureCache class.
	* ADD:		Add the methods addLDRImageTexture(float[]) and removeLDRImageTexture(float[]) to the CompiledTextureCache class.
	* ADD:		Add the methods addMarbleTexture(float[]) and removeMarbleTexture(float[]) to the CompiledTextureCache class.
	* ADD:		Add the methods addPolkaDotTexture(float[]) and removePolkaDotTexture(float[]) to the CompiledTextureCache class.
	* ADD:		Add the methods addSimplexFractionalBrownianMotionTexture(float[]) and removeSimplexFractionalBrownianMotionTexture(float[]) to the CompiledTextureCache class.
	* CHANGE:	Change the returned offset from absolute to relative in the methods addDiffuseAreaLight(float[]), addDirectionalLight(float[]), addLDRImageLight(float[]), addPerezLight(float[]), addPointLight(float[]) and addSpotLight(float[]) of the CompiledLightCache class.
	* CHANGE:	Change the returned offset from absolute to relative in the methods addBlendTexture(float[]) and addBullseyeTexture(float[]) of the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods getCheckerboardTextureOffsetAbsolute(float[]), getCheckerboardTextureOffsetRelative(float[]) and setCheckerboardTextures(float[]) in the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods getConstantTextureOffsetAbsolute(float[]), getConstantTextureOffsetRelative(float[]) and setConstantTextures(float[]) in the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods getMarbleTextureOffsetAbsolute(float[]), getMarbleTextureOffsetRelative(float[]) and setMarbleTextures(float[]) in the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods getPolkaDotTextureOffsetAbsolute(float[]), getPolkaDotTextureOffsetRelative(float[]) and setPolkaDotTextures(float[]) in the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods getSimplexFractionalBrownianMotionTextureOffsetAbsolute(float[]), getSimplexFractionalBrownianMotionTextureOffsetRelative(float[]) and setSimplexFractionalBrownianMotionTextures(float[]) in the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods setLDRImageTextureOffsets(int[]) and setLDRImageTextures(float[]) in the CompiledTextureCache class.

2021-07-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods addBlendTexture(float[]) and removeBlendTexture(float[]) to the CompiledTextureCache class.
	* ADD:		Add the methods addBullseyeTexture(float[]) and removeBullseyeTexture(float[]) to the CompiledTextureCache class.
	* ADD:		Add the methods getLDRImageTextureCount(), getLDRImageTextureOffsetAbsolute(float[]) and getLDRImageTextureOffsetRelative(float[]) to the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods getBlendTextureOffsetAbsolute(float[]), getBlendTextureOffsetRelative(float[]) and setBlendTextures(float[]) in the CompiledTextureCache class.
	* CHANGE:	Add additional parameter validation to the methods getBullseyeTextureOffsetAbsolute(float[]), getBullseyeTextureOffsetRelative(float[]) and setBullseyeTextures(float[]) in the CompiledTextureCache class.

2021-07-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods addDiffuseAreaLight(float[]) and removeDiffuseAreaLight(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods addDirectionalLight(float[]) and removeDirectionalLight(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods addPointLight(float[]) and removePointLight(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods addSpotLight(float[]) and removeSpotLight(float[]) to the CompiledLightCache class.
	* CHANGE:	Change the stored Light offsets from absolute to relative in the Scene Compiler API and the Renderer GPU API.
	* CHANGE:	Refactor the method toLDRImageLightOffsets(List<LDRImageLight>, ToIntFunction<LDRImageLight>) to toLDRImageLightOffsets(List<LDRImageLight>).
	* CHANGE:	Refactor the method toPerezLightOffsets(List<PerezLight>, ToIntFunction<PerezLight>) to toPerezLightOffsets(List<PerezLight>).

2021-07-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method indexOf(int, int[]) to the Ints class.
	* ADD:		Add the methods equals(Object) and hashCode() to the Distribution2F class.
	* ADD:		Add the methods equals(Object) and hashCode() to the Distribution1F class.
	* ADD:		Add the method requireRange(int[], int, int, String) to the ParameterArguments class.
	* ADD:		Add the methods getDiffuseAreaLightOffsetAbsolute(float[]) and getDiffuseAreaLightOffsetRelative(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods getDirectionalLightOffsetAbsolute(float[]) and getDirectionalLightOffsetRelative(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods addLDRImageLight(float[]), getLDRImageLightOffsetAbsolute(float[]), getLDRImageLightOffsetRelative(float[]) and removeLDRImageLight(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods addPerezLight(float[]), getPerezLightOffsetAbsolute(float[]), getPerezLightOffsetRelative(float[]) and removePerezLight(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods getPointLightOffsetAbsolute(float[]) and getPointLightOffsetRelative(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods getSpotLightOffsetAbsolute(float[]) and getSpotLightOffsetRelative(float[]) to the CompiledLightCache class.
	* CHANGE:	Add additional parameter validation to the methods setDiffuseAreaLights(float[]), setDirectionalLights(float[]), setLDRImageLightOffsets(int[]), setLDRImageLights(float[]), setPerezLightOffsets(int[]), setPerezLights(float[]), setPointLights(float[]) and setSpotLights(float[]) in the CompiledLightCache class.
	* CHANGE:	Add additional parameter validation to the methods requireExactArrayLength(byte[], int, String), requireFiniteValue(double, String), requireRange(double, double, double, String), requireExactArrayLength(double[], int, String), requireFiniteValue(float, String), requireRange(float, float, float, String), requireExactArrayLength(float[], int, String), requireExact(int, int, String), requireRange(int, int, int, String), requireRangef(int, int, int, String, Object[]) and requireExactArrayLength(int[], int, String) in the ParameterArguments class.

2021-07-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add additional parameter validation to the methods getAxisAlignedBoundingBox3FOffsetAbsolute(float[]), getAxisAlignedBoundingBox3FOffsetRelative(float[]), getBoundingSphere3FOffsetAbsolute(float[]), getBoundingSphere3FOffsetRelative(float[]), setAxisAlignedBoundingBox3Fs(float[]) and setBoundingSphere3Fs(float[]) in the CompiledBoundingVolume3FCache class.
	* ADD:		Add the methods addAxisAlignedBoundingBox3F(float[]), addBoundingSphere3F(float[]), removeAxisAlignedBoundingBox3F(float[]) and removeBoundingSphere3F(float[]) to the CompiledBoundingVolume3FCache class.
	* ADD:		Add the methods getAxisAlignedBoundingBox3FCount(), getAxisAlignedBoundingBox3FOffsetAbsolute(float[]) and getAxisAlignedBoundingBox3FOffsetRelative(float[]) to the CompiledBoundingVolume3FCache class.
	* ADD:		Add the methods getBoundingSphere3FCount(), getBoundingSphere3FOffsetAbsolute(float[]) and getBoundingSphere3FOffsetRelative(float[]) to the CompiledBoundingVolume3FCache class.
	* CHANGE:	Refactor the method getMaterialBullseyeMaterialOffsetRelative(float[]) in the CompiledMaterialCache class to getBullseyeMaterialOffsetRelative(float[]).

2021-07-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Optimized the Scene Compiler API.
	* CHANGE:	Refactor the CompiledPrimitiveCache class.
	* CHANGE:	Refactor the CompiledShape3FCache class.
	* CHANGE:	Refactor the CompiledTextureCache class.

2021-07-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the CompiledBoundingVolume3FCache class.
	* CHANGE:	Refactor the CompiledCameraCache class.
	* CHANGE:	Refactor the CompiledLightCache class.
	* CHANGE:	Refactor the CompiledMaterialCache class.
	* CHANGE:	Refactor the CompiledTextureCache class.

2021-07-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods toArray(PolkaDotMaterial, ToIntFunction<Material>), toMaterialPolkaDotMaterialArray(List<PolkaDotMaterial>) and toMaterialPolkaDotMaterialArray(List<PolkaDotMaterial>, ToIntFunction<Material>) to the CompiledMaterialCache class.
	* ADD:		Add the methods toArray(CheckerboardMaterial, ToIntFunction<Material>), toMaterialCheckerboardMaterialArray(List<CheckerboardMaterial>) and toMaterialCheckerboardMaterialArray(List<CheckerboardMaterial>, ToIntFunction<Material>) to the CompiledMaterialCache class.
	* ADD:		Add the methods toArray(BullseyeMaterial, ToIntFunction<Material>), toMaterialBullseyeMaterialArray(List<BullseyeMaterial>) and toMaterialBullseyeMaterialArray(List<BullseyeMaterial>, ToIntFunction<Material>) to the CompiledMaterialCache class.
	* ADD:		Add the methods toArray(DiffuseAreaLight, ToIntFunction<Shape3F>), toLightDiffuseAreaLightArray(List<DiffuseAreaLight>), toLightDiffuseAreaLightArray(List<DiffuseAreaLight>, ToIntFunction<Shape3F>), toLightDirectionalLightArray(List<DirectionalLight>), toLightIDAndOffsetArray(List<Light>, ToIntFunction<Light>), toLightLDRImageLightArray(List<LDRImageLight>), toLightLDRImageLightOffsetArray(List<LDRImageLight>, ToIntFunction<LDRImageLight>), toLightPerezLightArray(List<PerezLight>), toLightPerezLightOffsetArray(List<PerezLight>, ToIntFunction<PerezLight>), toLightPointLightArray(List<PointLight>) and toLightSpotLightArray(List<SpotLight>) to the CompiledLightCache class.
	* CHANGE:	Change the naming convention used by the CompiledBoundingVolume3FCache class.
	* CHANGE:	Change the naming convention used by the CompiledCameraCache class.

2021-07-12  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods toBoundingVolume3FAxisAlignedBoundingBox3FArray(List<AxisAlignedBoundingBox3F>) and toBoundingVolume3FBoundingSphere3FArray(List<BoundingSphere3F>) to the CompiledBoundingVolume3FCache class.
	* ADD:		Add the methods toArray(Cone3F), toArray(Cylinder3F), toArray(Disk3F), toArray(Hyperboloid3F), toArray(Paraboloid3F), toArray(Plane3F), toArray(Rectangle3F), toArray(RectangularCuboid3F), toArray(Sphere3F), toArray(Torus3F), toArray(Triangle3F), toArray(TriangleMesh3F) and getLength(TriangleMesh3F) to the CompiledShape3FCache class.
	* ADD:		Add the methods toArray(BullseyeMaterial), toArray(CheckerboardMaterial), toArray(ClearCoatMaterial), toArray(DisneyMaterial), toArray(GlassMaterial), toArray(GlossyMaterial), toArray(MatteMaterial), toArray(MetalMaterial), toArray(MirrorMaterial), toArray(PlasticMaterial), toArray(PolkaDotMaterial) and toArray(SubstrateMaterial) to the CompiledMaterialCache class.
	* CHANGE:	The responsibility to create arrays with a length of at least 1 has been moved to the Renderer GPU API, rather than the Scene Compiler API. This "requirement" is Aparapi-specific and would cause a crash if left out. The Scene Compiler API can be used for other purposes than in combination with Aparapi.

2021-07-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods toArray(BlendTexture), toArray(BullseyeTexture), toArray(CheckerboardTexture), toArray(ConstantTexture), toArray(LDRImageTexture), toArray(MarbleTexture), toArray(PolkaDotTexture), toArray(SimplexFractionalBrownianMotionTexture) and getLength(LDRImageTexture) to the CompiledTextureCache class.
	* ADD:		Add the methods toArray(DiffuseAreaLight), toArray(DirectionalLight), toArray(LDRImageLight), toArray(PerezLight), toArray(PointLight), toArray(SpotLight), getLength(LDRImageLight) and getLength(PerezLight) to the CompiledLightCache class.
	* ADD:		Add the methods toArray(AxisAlignedBoundingBox3F) and toArray(BoundingSphere3F) to the CompiledBoundingVolume3FCache class.
	* ADD:		Add support for the Parameter API in the GUI.
	* ADD:		Add the methods load(File, Scene, ParameterList) and load(String, Scene, ParameterList) to the SceneLoader interface and the JavaSceneLoader class.
	* ADD:		Add an inner class called Builder to the MatteMaterial class.
	* ADD:		Add an inner class called Builder to the MirrorMaterial class.
	* ADD:		Add an inner class called Builder to the PlasticMaterial class.
	* ADD:		Add support for BullseyeMaterial, CheckerboardMaterial and PolkaDotMaterial in the GUI Scene configuration control.
	* ADD:		Add support for Rectangle3F in the GUI Scene configuration control.
	* CHANGE:	Fix a bug in the GlassMaterial.Builder class.
	* CHANGE:	Change the default origin parameter of the BullseyeMaterial to 0.0, 10.0 and 0.0.
	* CHANGE:	Change the default origin parameter of the BullseyeTexture to 0.0, 10.0 and 0.0.

2021-07-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for BullseyeMaterial, CheckerboardMaterial and PolkaDotMaterial to the GPU-renderer.
	* ADD:		Add the fields materialBullseyeMaterialArray, materialCheckerboardMaterialArray and materialPolkaDotMaterialArray to the AbstractMaterialKernel class.
	* ADD:		Add the methods getMaterialBullseyeMaterialArray(), getMaterialBullseyeMaterialCount(), getMaterialBullseyeMaterialOffsetAbsolute(float[]), getMaterialBullseyeMaterialOffsetRelative(float[]) and setMaterialBullseyeMaterialArray(float[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods getMaterialCheckerboardMaterialArray(), getMaterialCheckerboardMaterialCount(), getMaterialCheckerboardMaterialOffsetAbsolute(float[]), getMaterialCheckerboardMaterialOffsetRelative(float[]) and setMaterialCheckerboardMaterialArray(float[]) to the CompiledMaterialCache class.
	* ADD:		Add the methods getMaterialPolkaDotMaterialArray(), getMaterialPolkaDotMaterialCount(), getMaterialPolkaDotMaterialOffsetAbsolute(float[]), getMaterialPolkaDotMaterialOffsetRelative(float[]) and setMaterialPolkaDotMaterialArray(float[]) to the CompiledMaterialCache class.
	* ADD:		Add the constants BULLSEYE_MATERIAL_*, CHECKERBOARD_MATERIAL_* and POLKA_DOT_MATERIAL_* to the CompiledMaterialCache class.
	* ADD:		Add support for PolkaDotTexture to the GPU-renderer.
	* ADD:		Add the field texturePolkaDotTextureArray to the AbstractTextureKernel class.
	* ADD:		Add the methods getTexturePolkaDotTextureArray(), getTexturePolkaDotTextureCount(), getTexturePolkaDotTextureOffsetAbsolute(float[]), getTexturePolkaDotTextureOffsetRelative(float[]) and setTexturePolkaDotTextureArray(float[]) to the CompiledTextureCache class.
	* ADD:		Add the constants POLKA_DOT_TEXTURE_* to the CompiledTextureCache class.
	* ADD:		Add the PolkaDotMaterial class.
	* CHANGE:	Change the ID values of the SubstrateMaterial and UberMaterial classes.

2021-07-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the PolkaDotTexture class.
	* ADD:		Add constants to the CompiledCameraCache class.
	* ADD:		Add the method toArray(Camera) to the CompiledCameraCache class.
	* ADD:		Add constants to the CompiledPrimitiveCache class.
	* ADD:		Add the methods getConeAngle(), getConeAngleDelta(), getCosConeAngle(), getCosConeAngleMinusConeAngleDelta() and getIntensity() to the SpotLight class.
	* ADD:		Add the methods getPerezRelativeLuminance(), getPerezX(), getPerezY(), getRadius(), getSunDirectionObjectSpace() and getZenith() to the PerezLight class.
	* ADD:		Add the constants L_D_R_IMAGE_LIGHT_* to the CompiledLightCache class.
	* ADD:		Add the methods getDistribution() and getRadius() to the LDRImageLight class.
	* CHANGE:	Change the String representations created by the toString() method of the BullseyeTexture and CheckerboardTexture classes. They were wrong.
	* CHANGE:	Change the ID values of the SimplexFractionalBrownianMotionTexture, SurfaceNormalTexture and UVTexture classes.
	* CHANGE:	Change the ID values of all Material implementations.
	* REMOVE:	Remove the constants ARRAY_OFFSET_* and ARRAY_SIZE from the Camera class.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the Primitive class.
	* REMOVE:	Remove the constant ARRAY_LENGTH from the PointLight and SpotLight classes.
	* REMOVE:	Remove the constants ARRAY_OFFSET_* from the LDRImageLight, PerezLight, PointLight and SpotLight classes.
	* REMOVE:	Remove the method toArray() from the Camera class.
	* REMOVE:	Remove the method toArray() from the Primitive class.
	* REMOVE:	Remove the method toArray() from the LDRImageLight, PerezLight, PointLight and SpotLight classes.
	* REMOVE:	Remove the method getArrayLength() from the LDRImageLight and PerezLight classes.

2021-07-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getRadiance() and getRadius() to the DirectionalLight class.
	* ADD:		Add the methods getColor(), getFrequency(), getGain() and getOctaves() to the SimplexFractionalBrownianMotionTexture class.
	* ADD:		Add the method getFrequency() to the MarbleTexture class.
	* ADD:		Add constants to the CompiledLightCache class.
	* ADD:		Add constants to the CompiledMaterialCache class.
	* ADD:		Add constants to the CompiledTextureCache class.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the DiffuseAreaLight and DirectionalLight classes.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the ClearCoatMaterial, DisneyMaterial, GlassMaterial, GlossyMaterial, MatteMaterial, MetalMaterial, MirrorMaterial, PlasticMaterial and SubstrateMaterial classes.
	* REMOVE:	Remove the constants ARRAY_OFFSET_TEXTURE_EMISSION, ARRAY_OFFSET_TEXTURE_EMISSION_ID and ARRAY_OFFSET_TEXTURE_EMISSION_OFFSET from the Material interface.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the BlendTexture, BullseyeTexture, CheckerboardTexture, ConstantTexture, LDRImageTexture, MarbleTexture and SimplexFractionalBrownianMotionTexture classes.
	* REMOVE:	Remove the method toArray() from the Transform class.
	* REMOVE:	Remove the method toArray() from the DiffuseAreaLight and DirectionalLight classes.
	* REMOVE:	Remove the method toArray() from the ClearCoatMaterial, DisneyMaterial, GlassMaterial, GlossyMaterial, MatteMaterial, MetalMaterial, MirrorMaterial, PlasticMaterial and SubstrateMaterial classes.
	* REMOVE:	Remove the method toArray() from the BlendTexture, BullseyeTexture, CheckerboardTexture, ConstantTexture, LDRImageTexture, MarbleTexture and SimplexFractionalBrownianMotionTexture classes.

2021-07-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getRootBVHNode() to the TriangleMesh3D and TriangleMesh3F classes.
	* ADD:		Add the methods getAH(), getCH(), getRMax(), getZMax() and getZMin() to the Hyperboloid3D and Hyperboloid3F classes.
	* ADD:		Add constants to the CompiledBoundingVolume3FCache class.
	* ADD:		Add constants to the CompiledShape3FCache class.
	* CHANGE:	Optimized the Scene Compiler API.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the AxisAlignedBoundingBox3D, AxisAlignedBoundingBox3F, BoundingSphere3D and BoundingSphere3F classes.
	* REMOVE:	Remove the constants ARRAY_OFFSET_* from the BVHNode3D, BVHNode3F, LeafBVHNode3D, LeafBVHNode3F, TreeBVHNode3D and TreeBVHNode3F classes.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the Cone3D, Cone3F, Cylinder3D, Cylinder3F, Disk3D, Disk3F, Hyperboloid3D, Hyperboloid3F, Paraboloid3D, Paraboloid3F, Plane3D, Plane3F, Rectangle3D, Rectangle3F, RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle3D and Triangle3F classes.
	* REMOVE:	Remove the method toArray() from the AxisAlignedBoundingBox3D, AxisAlignedBoundingBox3F, BoundingSphere3D and BoundingSphere3F classes.
	* REMOVE:	Remove the method toArray() from the Cone3D, Cone3F, Cylinder3D, Cylinder3F, Disk3D, Disk3F, Hyperboloid3D, Hyperboloid3F, Paraboloid3D, Paraboloid3F, Plane3D, Plane3F, Rectangle3D, Rectangle3F, RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle3D, Triangle3F, TriangleMesh3D and TriangleMesh3F classes.
	* REMOVE:	Remove the method getArrayLength() from the BVHNode3D, BVHNode3F, LeafBVHNode3D, LeafBVHNode3F, TreeBVHNode3D, TreeBVHNode3F, TriangleMesh3D and TriangleMesh3F classes.
	* REMOVE:	Remove the method toArray(BVHNode3D, List<T>) from the BVHNode3Ds class.
	* REMOVE:	Remove the method toArray(BVHNode3F, List<T>) from the BVHNode3Fs class.

2021-07-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the NodeCache class.
	* ADD:		Add the methods shape3FHyperboloid3FIntersects(int, float, float), shape3FHyperboloid3FIntersectionT(int, float, float) and shape3FHyperboloid3FIntersectionCompute(float, int, int) to the AbstractGeometryKernel class.
	* ADD:		Add the field shape3FHyperboloid3FArray to the AbstractGeometryKernel class.
	* ADD:		Add the methods getShape3FHyperboloid3FArray(), getShape3FHyperboloid3FCount(), getShape3FHyperboloid3FOffsetAbsolute(float[]), getShape3FHyperboloid3FOffsetRelative(float[]) and setShape3FHyperboloid3FArray(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the method toArray() to the Hyperboloid3D class.
	* ADD:		Add the method toArray() to the Hyperboloid3F class.
	* ADD:		Add the constants ARRAY_LENGTH, ARRAY_OFFSET_A_H, ARRAY_OFFSET_C_H, ARRAY_OFFSET_PHI_MAX, ARRAY_OFFSET_POINT_A, ARRAY_OFFSET_POINT_B, ARRAY_OFFSET_R_MAX, ARRAY_OFFSET_Z_MAX and ARRAY_OFFSET_Z_MIN to the Hyperboloid3D class.
	* ADD:		Add the constants ARRAY_LENGTH, ARRAY_OFFSET_A_H, ARRAY_OFFSET_C_H, ARRAY_OFFSET_PHI_MAX, ARRAY_OFFSET_POINT_A, ARRAY_OFFSET_POINT_B, ARRAY_OFFSET_R_MAX, ARRAY_OFFSET_Z_MAX and ARRAY_OFFSET_Z_MIN to the Hyperboloid3F class.
	* CHANGE:	Optimized the Scene Compiler API.

2021-07-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods findFilesFromDirectory(), findFilesFromDirectory(File), findFilesFromDirectory(File, Predicate<File>), findFilesFromDirectory(File, Predicate<File>, Predicate<File>) and readAllBytesToString(File) to the Files class.
	* CHANGE:	Move the Files class from the Utility API to the Java I/O API.
	* CHANGE:	Move the MortonCodes class from the Utility API to the Geometry API.
	* REMOVE:	Remove the methods splitAndDiscardEmptySubstrings(String, String), toConstantJavaField(String, double[]) and toConstantJavaField(String, float[]) from the Strings class.
	* REMOVE:	Remove all example classes. Most of them can be found in the Javadocs.

2021-07-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Java AWT Image API.
	* ADD:		Add the Java Util API.
	* CHANGE:	Move the BufferedImages class from the Utility API to the Java AWT Image API.
	* CHANGE:	Move the MersenneTwisterRandom class from the Utility API to the Java Util API.
	* CHANGE:	Move the XORShiftRandom class from the Utility API to the Java Util API.

2021-07-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Java I/O API from the dependency org.macroing.java.
	* ADD:		Add the Java Util Concurrent Atomic API from the dependency org.macroing.java.
	* ADD:		Add the Java Util Function API from the dependency org.macroing.java.
	* ADD:		Add the method lightEvaluateRadianceEmittedAreaLight(float, float, float, float, float, float) to the AbstractLightKernel class.
	* ADD:		Add the fields lightDiffuseAreaLightArray and lightDiffuseAreaLightCount to the AbstractLightKernel class.
	* ADD:		Add the methods getLightDiffuseAreaLightArray(), getLightDiffuseAreaLightCount() and setLightDiffuseAreaLightArray(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods accept(NodeHierarchicalVisitor), getRadianceEmitted(), getShape(), isTwoSided() and toArray() to the DiffuseAreaLight class.
	* ADD:		Add the constants ARRAY_LENGTH, ARRAY_OFFSET_IS_TWO_SIDED, ARRAY_OFFSET_OBJECT_TO_WORLD, ARRAY_OFFSET_RADIANCE_EMITTED, ARRAY_OFFSET_SHAPE_ID, ARRAY_OFFSET_SHAPE_OFFSET and ARRAY_OFFSET_WORLD_TO_OBJECT to the DiffuseAreaLight class.
	* CHANGE:	Update all import declarations that referred to classes and interfaces from the dependency org.macroing.java.
	* CHANGE:	Fix a bug in the AbstractLightKernel class. The image offset in the LDRImageLight class was referring to the image offset in the LDRImageTexture class.
	* CHANGE:	Change the method getLightCount() in the CompiledLightCache class to take into account what's returned by getLightDiffuseAreaLightCount().
	* CHANGE:	Change the value of the constant ARRAY_OFFSET_INTENSITY in the SpotLight class from 0 to 16 for better alignment.
	* CHANGE:	Change the value of the constant ARRAY_OFFSET_WORLD_TO_OBJECT in the SpotLight class from 3 to 0 for better alignment.
	* REMOVE:	Remove the dependency org.macroing.java.
	* REMOVE:	Remove the method lightEvaluateRadianceEmittedAny() from the AbstractLightKernel class.

2021-06-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getPointAt(double) to the Ray2D class.
	* ADD:		Add the method getPointAt(float) to the Ray2F class.
	* ADD:		Add the method getPointAt(double) to the Ray3D class.
	* ADD:		Add the method getPointAt(float) to the Ray3F class.
	* ADD:		Add the methods absolute(Vector2D), add(Vector2D, Vector2D, Vector2D), clearCache(), getCacheSize(), getCached(Vector2D), isUnitVector(), lerp(Vector2D, Vector2D, double), negateComponent1(Vector2D), negateComponent2(Vector2D), orthogonal(Vector2D, Vector2D), random(), randomNormalized(), reciprocal(Vector2D), u(), u(double), v(), v(double), x(), x(double), y() and y(double) to the Vector2D class.
	* ADD:		Add the methods absolute(Vector2F), add(Vector2F, Vector2F, Vector2F), clearCache(), getCacheSize(), getCached(Vector2F), isUnitVector(), lerp(Vector2F, Vector2F, float), negateComponent1(Vector2F), negateComponent2(Vector2F), orthogonal(Vector2F, Vector2F), random(), randomNormalized(), reciprocal(Vector2F), u(), u(float), v(), v(float), x(), x(float), y() and y(float) to the Vector2F class.
	* ADD:		Add the constants NaN and ZERO to the Vector2D class.
	* ADD:		Add the constants NaN and ZERO to the Vector2F class.
	* ADD:		Add the constructor Vector2D(double) to the Vector2D class.
	* ADD:		Add the constructor Vector2F(float) to the Vector2F class.

2021-06-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the classes BVHItem3D and BVHItem3F.
	* CHANGE:	Change the signature of the method create(List<LeafBVHNode3D>, Point3D, Point3D, int) in the class BVHNode3Ds to create(List<BVHItem3D<T>>, Point3D, Point3D, int). This is an optimization.
	* CHANGE:	Change the signature of the method create(List<LeafBVHNode3F>, Point3F, Point3F, int) in the class BVHNode3Fs to create(List<BVHItem3F<T>>, Point3F, Point3F, int). This is an optimization.

2021-06-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method addShapesTo(List<T>) to the LeafBVHNode3D class.
	* ADD:		Add the method addShapesTo(List<T>) to the LeafBVHNode3F class.
	* ADD:		Add the constants MAXIMUM and MINIMUM to the Point2D class.
	* ADD:		Add the constants MAXIMUM and MINIMUM to the Point2F class.
	* ADD:		Add the methods maximum(Point3D, Point3D, Point3D, Point3D) and minimum(Point3D, Point3D, Point3D, Point3D) to the Point3D class.
	* ADD:		Add the methods maximum(Point3F, Point3F, Point3F, Point3F) and minimum(Point3F, Point3F, Point3F, Point3F) to the Point3F class.
	* ADD:		Add the methods add(Point2D, double), centroid(Point2D, Point2D), centroid(Point2D, Point2D, Point2D), centroid(Point2D, Point2D, Point2D, Point2D), centroid(Point2D, Point2D, Point2D, Point2D, Point2D, Point2D, Point2D, Point2D), clearCache(), getCacheSize(), getCached(Point2D), getComponent(int), subtract(Point2D, Vector2D) and subtract(Point2D, double) to the Point2D class.
	* ADD:		Add the methods add(Point2F, float), centroid(Point2F, Point2F), centroid(Point2F, Point2F, Point2F), centroid(Point2F, Point2F, Point2F, Point2F), centroid(Point2F, Point2F, Point2F, Point2F, Point2F, Point2F, Point2F, Point2F), clearCache(), getCacheSize(), getCached(Point2F), getComponent(int), subtract(Point2F, Vector2F) and subtract(Point2F, float) to the Point2F class.
	* ADD:		Add the constructor Point2D(double) to the Point2D class.
	* ADD:		Add the constructor Point2F(float) to the Point2F class.

2021-06-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method equal(int[], int[], int, int, int) to the Ints class.
	* ADD:		Add the methods getCompiledLightCache(), getCompiledCameraCache(), getCompiledMaterialCache(), getCompiledPrimitiveCache(), getCompiledShape3FCache() and getCompiledTextureCache() to the CompiledScene class.
	* ADD:		Add the CompiledCameraCache, CompiledLightCache, CompiledMaterialCache, CompiledPrimitiveCache, CompiledShape3FCache and CompiledTextureCache classes.
	* REMOVE:	Remove all methods related to the compiled Camera, Light, Material, Primitive, Shape3F and Texture types from the CompiledScene class.

2021-06-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getCompiledBoundingVolume3FCache() to the CompiledScene class.
	* ADD:		Add the class CompiledBoundingVolume3FCache.
	* ADD:		Add the methods getTextureBlendTextureCount(), getTextureBlendTextureOffsetAbsolute(float[]) and getTextureBlendTextureOffsetRelative(float[]) to the CompiledScene class.
	* REMOVE:	Remove the methods getBoundingVolume3FAxisAlignedBoundingBox3FArray(), getBoundingVolume3FBoundingSphere3FArray(), setBoundingVolume3FAxisAlignedBoundingBox3FArray(float[]) and setBoundingVolume3FBoundingSphere3FArray(float[]) from the CompiledScene class.

2021-06-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getShape3FTriangle3FCount(), getShape3FTriangle3FOffsetAbsolute(float[]) and getShape3FTriangle3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FTorus3FCount(), getShape3FTorus3FOffsetAbsolute(float[]) and getShape3FTorus3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FSphere3FCount(), getShape3FSphere3FOffsetAbsolute(float[]) and getShape3FSphere3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FRectangularCuboid3FCount(), getShape3FRectangularCuboid3FOffsetAbsolute(float[]) and getShape3FRectangularCuboid3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FRectangle3FCount(), getShape3FRectangle3FOffsetAbsolute(float[]) and getShape3FRectangle3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FPlane3FCount(), getShape3FPlane3FOffsetAbsolute(float[]) and getShape3FPlane3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FParaboloid3FCount(), getShape3FParaboloid3FOffsetAbsolute(float[]) and getShape3FParaboloid3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FDisk3FCount(), getShape3FDisk3FOffsetAbsolute(float[]) and getShape3FDisk3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FCylinder3FCount(), getShape3FCylinder3FOffsetAbsolute(float[]) and getShape3FCylinder3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FCone3FCount(), getShape3FCone3FOffsetAbsolute(float[]) and getShape3FCone3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the method equal(double[], double[], int, int, int) to the Doubles class.
	* ADD:		Add the method equal(float[], float[], int, int, int) to the Floats class.

2021-06-21  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add sliders to change the aperture radius and focal distance of the camera in the GUI. They can be located in the camera configuration of the configuration view on the left-hand side.

2021-06-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the keys 'Q' and 'E' in the GUI to move the camera up and down, respectively.
	* ADD:		Add the method toString(boolean) to the Lens enum. If the parameter argument true is passed, the old String representation (which is now called the internal format) will be returned, otherwise the new external format will be used.
	* ADD:		Add camera configuration to the configuration view on the left-hand side in the GUI.
	* ADD:		Add a new Geometry Bounding Volume Hierarchy API.
	* CHANGE:	Change what's returned from the toString() method of the Lens enum.
	* CHANGE:	Change the layout of the configuration view on the left-hand side in the GUI to an accordion.
	* CHANGE:	Some minor changes to the PerezLight class and its equivalent GPU-renderer version in the AbstractLightKernel class.
	* CHANGE:	Refactor the TriangleMesh3D, TriangleMesh3F, AbstractGeometryKernel and Shape3FCache classes to use the new Geometry Bounding Volume Hierarchy API.

2021-06-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Vertex3D-caching to the Triangle3D class.
	* ADD:		Add Vertex3F-caching to the Triangle3F class.
	* ADD:		Add the methods getCached(Vertex3D), getCacheSize() and clearCache() to the Vertex3D class.
	* ADD:		Add the methods getCached(Vertex3F), getCacheSize() and clearCache() to the Vertex3F class.
	* ADD:		Add the constructors Circle2I(Circle2D) and Circle2I(Circle2F) to the Circle2I class.
	* ADD:		Add the constructors Rectangle2I(Rectangle2D) and Rectangle2I(Rectangle2F) to the Rectangle2I class.
	* ADD:		Add the constructors Point2I(Point2D) and Point2I(Point2F) to the Point2I class.
	* ADD:		Add the constructor Circle2D(Rectangle2D) to the Circle2D class.
	* ADD:		Add the constructor Circle2F(Rectangle2F) to the Circle2F class.
	* ADD:		Add the method midpoint(Point2D, Point2D) to the Point2D class.
	* ADD:		Add the method midpoint(Point2F, Point2F) to the Point2F class.
	* ADD:		Add the constructor Rectangle2D(Circle2D) to the Rectangle2D class.
	* ADD:		Add the constructor Rectangle2F(Circle2F) to the Rectangle2F class.
	* ADD:		Add the constructor Rectangle2I(Circle2I) to the Rectangle2I class.
	* CHANGE:	Optimized the Scene Compiler API.
	* REMOVE:	Remove the method getBounds() from the Circle2I class.

2021-06-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method add(Point2D, Vector2D, double) to the Point2D class.
	* ADD:		Add the method add(Point2F, Vector2F, float) to the Point2F class.
	* ADD:		Add the method directionNormalized(Point2D, Point2D) to the Vector2D class.
	* ADD:		Add the method directionNormalized(Point2F, Point2F) to the Vector2F class.
	* ADD:		Add the methods getColorRGBA(Point2I), getColorRGBA(Point2I, Function<Point2I, Color4D>) and getColorRGBA(Point2I, PixelOperation) to the ImageD class.
	* ADD:		Add the methods getColorRGBA(Point2I), getColorRGBA(Point2I, Function<Point2I, Color4F>) and getColorRGBA(Point2I, PixelOperation) to the ImageF class.
	* ADD:		Add the methods getColorRGB(Point2D), getColorRGB(Point2D, PixelOperation), getColorRGB(Point2I) and getColorRGB(Point2I, PixelOperation) to the ImageD class.
	* ADD:		Add the methods getColorRGB(Point2F), getColorRGB(Point2F, PixelOperation), getColorRGB(Point2I) and getColorRGB(Point2I, PixelOperation) to the ImageF class.
	* ADD:		Add the method drawCircleComplement(Circle2I, BiFunction<Color4D, Point2I, Color4D>) to the ImageD class.
	* ADD:		Add the method drawCircleComplement(Circle2I, BiFunction<Color4F, Point2I, Color4F>) to the ImageF class.

2021-06-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getBounds(), findPointsOfComplement(), findPointsOfComplement(Rectangle2I), findPointsOfComplement(Rectangle2I, boolean), findPointsOfIntersection(), findPointsOfIntersection(Rectangle2I) and findPointsOfIntersection(Rectangle2I, boolean) to the Circle2I class.
	* ADD:		Add the method fillCircleComplement(Circle2I, BiFunction<Color4D, Point2I, Color4D>) to the ImageD class.
	* ADD:		Add the method fillCircleComplement(Circle2I, BiFunction<Color4F, Point2I, Color4F>) to the ImageF class.
	* ADD:		Add the methods createCurvesByBSpline() and createCurvesByBezier() to the Curve3D and Curve3F classes.

2021-06-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods toRGBE() and fromRGBE(int) to the Color3D and Color3F classes.
	* ADD:		Add the class DoubleImageD.
	* ADD:		Add the class FloatImageF.
	* ADD:		Add the methods requireExactArrayLength(double[], int, String) and requireExactArrayLength(float[], int, String) to the ParameterArguments class.
	* ADD:		Add the method array(int, double, double, double, double) to the Doubles class.
	* ADD:		Add the method array(int, float, float, float, float) to the Floats class.
	* CHANGE:	Some minor changes to the PerezLight class and its equivalent GPU-renderer version in the AbstractLightKernel class.
	* CHANGE:	Refactor the package org.dayflower.javafx.canvas to org.dayflower.javafx.scene.canvas.

2021-06-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a new Scene Compiler API. It used to be a private API in the Renderer GPU API.

2021-06-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the order of UndoActions in the ChangeCombiner to the reverse of the order they were added.

2021-06-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Noise API that includes the classes PerlinNoiseD, PerlinNoiseF, SimplexNoiseD and SimplexNoiseF.
	* ADD:		Add the class FileParameter.
	* ADD:		Add the classes AxisAlignedBoundingBox3DReader, AxisAlignedBoundingBox3FReader, BoundingSphere3DReader, BoundingSphere3FReader, InfiniteBoundingVolume3DReader, InfiniteBoundingVolume3FReader, DefaultBoundingVolume3DReader and DefaultBoundingVolume3FReader.
	* ADD:		Add the method write(DataOutput) to the classes AxisAlignedBoundingBox3D, AxisAlignedBoundingBox3F, BoundingSphere3D, BoundingSphere3F, InfiniteBoundingVolume3D and InfiniteBoundingVolume3F.
	* ADD:		Add an extends clause with BoundingVolumeReader to BoundingVolume3DReader and BoundingVolume3FReader.
	* ADD:		Add the interfaces BoundingVolume and BoundingVolumeReader.
	* CHANGE:	Change the factor of the sun color in the PerezLight from 0.001F to 0.0001F. The original value was 0.0001F. The value 0.001F produced more shadows, but also some artifacts.
	* CHANGE:	Change the extended interface of BoundingVolume3D and BoundingVolume3F from Node to BoundingVolume.
	* REMOVE:	Remove the classes NoiseD and NoiseF from the Utility API.
	* REMOVE:	Remove the method getID() from BoundingVolume3D and BoundingVolume3F.
	* REMOVE:	Remove the method isSupported(int) from BoundingVolume3DReader and BoundingVolume3FReader.

2021-06-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for Rectangle3F in the GPU-renderer.
	* ADD:		Add support for Rectangle3DReader in DefaultShape3DReader.
	* ADD:		Add support for Rectangle3FReader in DefaultShape3FReader.
	* ADD:		Add the classes Rectangle3D, Rectangle3DReader, Rectangle3F and Rectangle3FReader.
	* CHANGE:	Fix a bug in the Specular BRDF that uses a constant Fresnel in the GPU-renderer. The red and blue components were swapped.
	* CHANGE:	Change the IDs of RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle3D, Triangle3F, TriangleMesh3D and TriangleMesh3F.

2021-06-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method createScreenCapture(Rectangle2I) to the IntImageD and IntImageF classes.
	* ADD:		Add the methods blend(ImageD, ImageD), blend(ImageD, ImageD, double) and blend(ImageD, ImageD, double, double, double, double) to the ByteImageD and IntImageD classes.
	* ADD:		Add the methods blend(ImageF, ImageF), blend(ImageF, ImageF, float) and blend(ImageF, ImageF, float, float, float, float) to the ByteImageF and IntImageF classes.
	* ADD:		Add the classes HBoxes and VBoxes.

2021-06-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for the method hasFinishedSucceeded() of the PredicateTask class in the ConcurrentImageCanvas class.
	* ADD:		Add the method hasFinishedSucceeded() to the PredicateTask class.

2021-06-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods color3FLHSSetMaximumTo1(float, float, float) and color3FRHSSetMaximumTo1(float, float, float) to the AbstractImageKernel class.
	* ADD:		Add support for window resizing in the GPU-renderer.
	* ADD:		Add support for undo and redo operations to the ImageD and ImageF classes.
	* ADD:		Add the methods isChangeHistoryEnabled(), setChangeHistoryEnabled(boolean), getChangeHistory(), redo() and undo() to the Image class.
	* ADD:		Add the class ChangeCombiner.

2021-06-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a simple Change API to handle undo and redo operations.
	* ADD:		Add the method putColorRGBA(Color4D, int) to the ImageD, ByteImageD, IntImageD and PixelImageD classes.
	* ADD:		Add the method putColorRGBA(Color4F, int) to the ImageF, ByteImageF, IntImageF and PixelImageF classes.
	* CHANGE:	Change the abstract modifier of the methods setColorRGBA(Color4D, int, PixelOperation) and setColorRGBA(Color4D, int, int, PixelOperation) in the ImageD class to final and add their implementations.
	* CHANGE:	Change the abstract modifier of the methods setColorRGBA(Color4F, int, PixelOperation) and setColorRGBA(Color4F, int, int, PixelOperation) in the ImageF class to final and add their implementations.
	* REMOVE:	Remove the methods setColorRGBA(Color4D, int, PixelOperation) and setColorRGBA(Color4D, int, int, PixelOperation) from the ByteImageD, IntImageD and PixelImageD classes.
	* REMOVE:	Remove the methods setColorRGBA(Color4F, int, PixelOperation) and setColorRGBA(Color4F, int, int, PixelOperation) from the ByteImageF, IntImageF and PixelImageF classes.

2021-06-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the class Files.
	* ADD:		Add the methods addLater(Object) and addLater(Object, Consumer<Tab>) to the NodeSelectionTabPane class.
	* ADD:		Add support for resizing the Dayflower application window, including the ConcurrentImageCanvas, the Camera and the CPU-renderer. This feature is in early development and may not work as expected yet.
	* ADD:		Add the method setImageUpdater(ImageUpdater) to the ConcurrentImageCanvas class.
	* ADD:		Add the class ConcurrentImageCanvas.ImageUpdater.
	* REMOVE:	Remove the method setImage(Image) from the ConcurrentImageCanvas class.

2021-05-30  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a generic type for the Image to the ConcurrentImageCanvas class.
	* ADD:		Add a class called ConcurrentImageCanvasPane.
	* CHANGE:	Change the type ImageF in the constructors of the ConcurrentImageCanvas class to a generic type T that extends Image.
	* CHANGE:	Change the method signature of the single method in the ConcurrentImageCanvas.Observer interface.

2021-05-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the BXDF for GlossyMaterial from AshikhminShirleyBRDF to TorranceSparrowBRDF. The change was also done in the GPU-renderer.
	* REMOVE:	Remove the old material system in the GPU-renderer.
	* REMOVE:	Remove the old Path Tracer implementations from the GPU-renderer.

2021-05-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the classes Triangle3DReader and Triangle3FReader.

2021-05-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for LDRImageLight to the new lighting system in the GPU-renderer.

2021-05-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix a bug in the AbstractMaterialKernel class. The negation flag for the incoming direction was only accounted for in one case.

2021-05-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the classes Triangle2DReader, Triangle2FReader and Triangle2IReader.

2021-05-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add an extends clause with ShapeReader to Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader.
	* ADD:		Add the interfaces Shape and ShapeReader.
	* ADD:		Add the classes RectangularCuboid3DReader, RectangularCuboid3FReader, Sphere3DReader, Sphere3FReader, Torus3DReader and Torus3FReader.
	* CHANGE:	Change the extended interface of Shape2D, Shape2F, Shape2I, Shape3D and Shape3F from Node to Shape.
	* REMOVE:	Remove the methods getName(), getID(), write(DataOutput), write(File) and write(String) from Shape2D, Shape2F, Shape2I, Shape3D and Shape3F.
	* REMOVE:	Remove the method isSupported(int) from Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader.

2021-05-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method read(DataInput) to the interfaces BoundingVolume3DReader and BoundingVolume3FReader.
	* ADD:		Add an IllegalArgumentException to the contract of the method read(DataInput, int) of the interfaces BoundingVolume3DReader and BoundingVolume3FReader.
	* ADD:		Add the constructor Rectangle2D(Point2D, Point2D, Point2D, Point2D) to the Rectangle2D class.
	* ADD:		Add the constructor Rectangle2F(Point2F, Point2F, Point2F, Point2F) to the Rectangle2F class.
	* ADD:		Add the constructor Rectangle2I(Point2I, Point2I, Point2I, Point2I) to the Rectangle2I class.
	* ADD:		Add the classes Plane3DReader, Plane3FReader, ProceduralTerrain3DReader, ProceduralTerrain3FReader, Rectangle2DReader, Rectangle2FReader and Rectangle2IReader.

2021-05-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the default methods write(File) and write(String) to the interfaces Shape2D, Shape2F, Shape2I, Shape3D and Shape3F.
	* ADD:		Add the constructor Hyperboloid3D(AngleD, Point3D, Point3D, double, double, double, double, double) to the Hyperboloid3D class.
	* ADD:		Add the constructor Hyperboloid3F(AngleF, Point3F, Point3F, float, float, float, float, float) to the Hyperboloid3F class.
	* ADD:		Add the method write(DataOutput) to the interfaces Shape2D, Shape2F, Shape2I, Shape3D and Shape3F.
	* ADD:		Add the method read(DataInput) to the interfaces Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader as well as to all classes that implements any of these.
	* ADD:		Add an IllegalArgumentException to the contract of the method read(DataInput, int) of the interfaces Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader as well as to all classes that implements any of these.
	* ADD:		Add the method write(DataOutput) to the classes Cone3D, Cone3F, ConstructiveSolidGeometry3D, ConstructiveSolidGeometry3F, Curve3D, Curve3F, Curves3D, Curves3F, Cylinder3D, Cylinder3F, Disk3D, Disk3F, Hyperboloid3D, Hyperboloid3F, Line2D, Line2F, Line2I, Paraboloid3D, Paraboloid3F, Plane3D, Plane3F, ProceduralTerrain3D, ProceduralTerrain3F, Rectangle2D, Rectangle2F, Rectangle2I, RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle2D, Triangle2F, Triangle2I, Triangle3D, Triangle3F, TriangleMesh3D and TriangleMesh3F.
	* ADD:		Add the classes Cone3DReader, Cone3FReader, ConstructiveSolidGeometry3DReader, ConstructiveSolidGeometry3FReader, Curve3DReader, Curve3FReader, Curves3DReader, Curves3FReader, Cylinder3DReader, Cylinder3FReader, DefaultShape2DReader, DefaultShape2FReader, DefaultShape2IReader, DefaultShape3DReader, DefaultShape3FReader, Disk3DReader, Disk3FReader, Hyperboloid3DReader, Hyperboloid3FReader, Line2DReader, Line2FReader, Line2IReader, Paraboloid3DReader and Paraboloid3FReader.
	* CHANGE:	A problem related to the renderShutdown() method in the AbstractGPURenderer class has been fixed. Movement using the WASD-keys in the JavaFX Application caused the Path Tracer to stop rendering, but not the Ambient Occlusion or Ray Caster.

2021-05-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method write(DataOutput) to the classes Circle2D, Circle2F and Circle2I.
	* ADD:		Add the classes Circle2DReader, Circle2FReader and Circle2IReader.
	* ADD:		Add the interfaces BoundingVolume3DReader, BoundingVolume3FReader, Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader.
	* ADD:		Add the methods getName() and getID() to the classes Circle2D, Circle2F, Circle2I, Line2D, Line2F, Line2I, Rectangle2D, Rectangle2F, Rectangle2I, Triangle2D, Triangle2F and Triangle2I.
	* ADD:		Add the methods getName() and getID() to the interfaces Shape2D, Shape2F and Shape2I.
	* ADD:		Add an inner class called Builder to the GlassMaterial class.
	* ADD:		Add an inner class called Builder to the GlossyMaterial class.
	* ADD:		Add the methods read(DataInput) and write(DataOutput) to the classes Color3D, Color3F, Color4D and Color4F.
	* ADD:		Add the methods read(DataInput) and write(DataOutput) to the classes AngleD, AngleF, Matrix33D, Matrix33F, Matrix44D, Matrix44F, OrthonormalBasis33D, OrthonormalBasis33F, Point2D, Point2F, Point2I, Point3D, Point3F, Point4D, Point4F, Quaternion4D, Quaternion4F, Ray2D, Ray2F, Ray3D, Ray3F, Vector2D, Vector2F, Vector2I, Vector3D, Vector3F, Vector4D and Vector4F.
	* ADD:		Add the methods createClearCoatMaterialScene(), createCone3FScene(), createConstructiveSolidGeometry3FScene(), createCylinder3FScene(), createDisk3FScene(), createDisneyMaterialScene(), createGlassMaterialScene() and createGlossyMaterialScene() to the Demo class.
	* CHANGE:	Change the name of the method setThis(boolean) to setThin(boolean) in the class DisneyMaterial.Builder. It was not correctly spelled.

2021-05-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a class called Ray2D.
	* ADD:		Add a class called Ray2F.
	* ADD:		Add new constructors to FileRendererObserver that accepts a parameter argument called isPrintingOnDisplay. If it is set to true, a message will be printed to standard output when the onRenderDisplay(Renderer, ImageF) method is called.

2021-05-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a class called Vector2I.
	* ADD:		Add a constructor that accepts a Vector2I instance as a parameter argument to the Point2I class.

2021-05-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the use of Double.MAX_VALUE to Doubles.MAX_VALUE.
	* CHANGE:	Change the use of Double.MIN_VALUE to Doubles.MIN_VALUE.
	* CHANGE:	Change the use of Float.MAX_VALUE to Floats.MAX_VALUE.
	* CHANGE:	Change the use of Float.MIN_VALUE to Floats.MIN_VALUE.
	* CHANGE:	Change the value of Doubles.MIN_VALUE from Double.MIN_VALUE to -Double.MAX_VALUE.
	* CHANGE:	Change the value of Floats.MIN_VALUE from Float.MIN_VALUE to -Float.MAX_VALUE.

2021-05-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the return type of many methods in ImageD from void to ImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in ImageF from void to ImageF, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in ByteImageD from void to ByteImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in ByteImageF from void to ByteImageF, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in IntImageD from void to IntImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in IntImageF from void to IntImageF, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in PixelImageD from void to PixelImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in PixelImageF from void to PixelImageF, such that method chaining can be performed.

2021-05-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a constant called TRANSPARENT to the Color4D class.
	* ADD:		Add a constant called TRANSPARENT to the Color4F class.
	* ADD:		Add the methods transform(Matrix33D, Point2D) and transformAndDivide(Matrix33D, Point2D) to the Point2D class.
	* ADD:		Add the methods transform(Matrix33F, Point2F) and transformAndDivide(Matrix33F, Point2F) to the Point2F class.
	* ADD:		Add the methods transform(Matrix33D, Vector2D) and transformTranspose(Matrix33D, Vector2D) to the Vector2D class.
	* ADD:		Add the methods transform(Matrix33F, Vector2F) and transformTranspose(Matrix33F, Vector2F) to the Vector2F class.
	* ADD:		Add the method getColorRGBA(int, int, Function<Point2I, Color4D>) to the ImageD, ByteImageD, IntImageD and PixelImageD classes.
	* ADD:		Add the method getColorRGBA(int, int, Function<Point2I, Color4F>) to the ImageF, ByteImageF, IntImageF and PixelImageF classes.
	* ADD:		Add the methods getColorRGBA(Point2D), getColorRGBA(Point2D, PixelOperation), getColorRGBA(Point2D, Function<Point2I, Color4D>) and getColorRGBA(double, double, Function<Point2I, Color4D>) to the ImageD class.
	* ADD:		Add the methods getColorRGBA(Point2F), getColorRGBA(Point2F, PixelOperation), getColorRGBA(Point2F, Function<Point2I, Color4F>) and getColorRGBA(float, float, Function<Point2I, Color4F>) to the ImageF class.
	* ADD:		Add a new rotate(AngleD, boolean) method to the ImageD class. The boolean parameter argument, called isWrappingAround, allows for wrapping using PixelOperation.WRAP_AROUND.
	* ADD:		Add a new rotate(AngleF, boolean) method to the ImageF class. The boolean parameter argument, called isWrappingAround, allows for wrapping using PixelOperation.WRAP_AROUND.
	* ADD:		Add a class called Matrix33D.
	* ADD:		Add a class called Matrix33F.

2021-05-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method negate(AngleD) to the AngleD class.
	* ADD:		Add the method negate(AngleF) to the AngleF class.
	* ADD:		Add the methods add(Point2D, Vector2D), maximum(Point2D, Point2D, Point2D, Point2D) and minimum(Point2D, Point2D, Point2D, Point2D) to the Point2D class.
	* ADD:		Add the methods add(Point2F, Vector2F), maximum(Point2F, Point2F, Point2F, Point2F) and minimum(Point2F, Point2F, Point2F, Point2F) to the Point2F class.
	* ADD:		Add the methods rotate(Rectangle2D, AngleD) and translate(Rectangle2D, Vector2D) to the Rectangle2D class.
	* ADD:		Add the methods rotate(Rectangle2F, AngleF) and translate(Rectangle2F, Vector2F) to the Rectangle2F class.
	* ADD:		Add the method newImage(int, int) to the ImageD, ByteImageD, IntImageD and PixelImageD classes.
	* ADD:		Add the method newImage(int, int) to the ImageF, ByteImageF, IntImageF and PixelImageF classes.
	* ADD:		Add the methods rotate(AngleD), scale(Vector2D) and scale(int, int) to the ImageD class.
	* ADD:		Add the methods rotate(AngleF), scale(Vector2F) and scale(int, int) to the ImageF class.
	* ADD:		Add the methods requireRange(double, double, double, String) and requireRange(float, float, float, String) to the ParameterArguments class.

2021-05-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method contains(Point2D) to the Line2D class.
	* ADD:		Add the method contains(Point2F) to the Line2F class.
	* ADD:		Add the method contains(Point2I) to the Line2I class.
	* ADD:		Add the methods contains(Point2D), intersection(Rectangle2D, Rectangle2D) and union(Rectangle2D, Rectangle2D) to the Rectangle2D class.
	* ADD:		Add the methods contains(Point2F), intersection(Rectangle2F, Rectangle2F) and union(Rectangle2F, Rectangle2F) to the Rectangle2F class.
	* ADD:		Add the methods contains(Point2I) and union(Rectangle2I, Rectangle2I) to the Rectangle2I class.
	* ADD:		Add the methods fillSimplexFractionalBrownianMotion(), fillSimplexFractionalBrownianMotion(Color3D) and fillSimplexFractionalBrownianMotion(Color3D, double, double, int) to the ImageD class.
	* ADD:		Add the methods fillSimplexFractionalBrownianMotion(), fillSimplexFractionalBrownianMotion(Color3F) and fillSimplexFractionalBrownianMotion(Color3F, float, float, int) to the ImageF class.

2021-05-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods maximum(Point2I, Point2I) and minimum(Point2I, Point2I) to the Point2I class.
	* ADD:		Add the method intersection(Rectangle2I, Rectangle2I) to the Rectangle2I class.
	* ADD:		Add the method copy(Rectangle2I) to the ImageD, ImageF, ByteImageD, ByteImageF, IntImageD, IntImageF, PixelImageD and PixelImageF classes.
	* CHANGE:	Change the algorithm for the methods getHeight() and getWidth() in the Rectangle2D, Rectangle2F and Rectangle2I classes.

2021-05-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods fillGradient() and fillGradient(Color3D, Color3D, Color3D, Color3D) to the ImageD class.
	* ADD:		Add the methods fillGradient() and fillGradient(Color3F, Color3F, Color3F, Color3F) to the ImageF class.
	* ADD:		Add the constructors Color4D(Color3D, double), Color4D(Color3D, double) and Color4D(double, double) to the Color4D class.
	* ADD:		Add the constructors Color4F(Color3D, float), Color4F(Color3F, float) and Color4F(float, float) to the Color4F class.
	* ADD:		Add the methods blendOver(Color4D, Color4D), grayscaleAverage(Color4D), grayscaleComponent1(Color4D), grayscaleComponent2(Color4D), grayscaleComponent3(Color4D), grayscaleLightness(Color4D), grayscaleLuminance(Color4D), grayscaleMaximum(Color4D), grayscaleMinimum(Color4D) and sepia(Color4D) to the Color4D class.
	* ADD:		Add the methods blendOver(Color4F, Color4F), grayscaleAverage(Color4F), grayscaleComponent1(Color4F), grayscaleComponent2(Color4F), grayscaleComponent3(Color4F), grayscaleLightness(Color4F), grayscaleLuminance(Color4F), grayscaleMaximum(Color4F), grayscaleMinimum(Color4F) and sepia(Color4F) to the Color4F class.
	* ADD:		Add the methods blendOver(ImageD), grayscaleAverage(), grayscaleComponent1(), grayscaleComponent2(), grayscaleComponent3(), grayscaleLightness(), grayscaleLuminance(), grayscaleMaximum(), grayscaleMinimum(), sepia() and transparency(double) to the ImageD class.
	* ADD:		Add the methods blendOver(ImageF), grayscaleAverage(), grayscaleComponent1(), grayscaleComponent2(), grayscaleComponent3(), grayscaleLightness(), grayscaleLuminance(), grayscaleMaximum(), grayscaleMinimum(), sepia() and transparency(float) to the ImageF class.

2021-05-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods update(BiFunction<Color4D, Point2I, Color4D>) and update(BiFunction<Color4D, Point2I, Color4D>, Rectangle2I) to the ImageD class.
	* ADD:		Add the methods update(BiFunction<Color4F, Point2I, Color4F>) and update(BiFunction<Color4F, Point2I, Color4F>, Rectangle2I) to the ImageF class.
	* ADD:		Add the constructor IntImageD(BufferedImage) to the IntImageD class.
	* ADD:		Add the constructor IntImageF(BufferedImage) to the IntImageF class.
	* ADD:		Add the methods load(File) and load(String) to the IntImageD class.
	* ADD:		Add the methods load(File) and load(String) to the IntImageF class.

2021-04-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods addAndMultiply(Color3D, Color3D, Color3D) and addAndMultiply(Color3D, Color3D, Color3D, double) to the Color3D class.
	* ADD:		Add the methods addAndMultiply(Color3F, Color3F, Color3F) and addAndMultiply(Color3F, Color3F, Color3F, float) to the Color3F class.

2021-04-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for changing the rendering algorithm in the AbstractGPURenderer and GPURenderer classes.

2021-04-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add an inner class called Builder to the DisneyMaterial class.
	* ADD:		Add an inner class called Builder to the ClearCoatMaterial class.

2021-04-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method setImage() to the Renderer interface as well as an implementation of it in the AbstractCPURenderer and AbstractGPURenderer classes.
	* ADD:		Add a class called Demo with methods to create Scene instances for demonstration purposes.
	* ADD:		Add the methods getAmplitudes(), getWavelengths(), parseSPD(File) and printSPDToJava(File, File) to the classes IrregularSpectralCurveD and IrregularSpectralCurveF.
	* ADD:		Add the method radicalInverse(int, long) to the classes Doubles and Floats.
	* ADD:		Add the methods toConstantJavaField(String, double[]) and toConstantJavaField(String, float[]) to the Strings class.
	* REMOVE:	Remove the Previews class.

2021-04-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the resolution of the Distribution2F that is created by the LDRImageLight class from the resolution of the image itself to 32x32.

2021-04-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method pack(int, int, int, int) to the Ints class.
	* CHANGE:	Update the memory requirement for ClearCoatMaterial, DisneyMaterial, GlassMaterial, GlossyMaterial, MatteMaterial, MetalMaterial, MirrorMaterial, PlasticMaterial and SubstrateMaterial on the GPU.

2021-04-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a dependency to org.macroing.java.
	* CHANGE:	Update the sun sampling for the PerezLight class.
	* CHANGE:	The package names of the classes and interfaces in the Utility API that were moved to org.macroing.java were updated.
	* REMOVE:	Some classes and interfaces in the Utility API were moved to org.macroing.java and therefore removed from the Utility API.